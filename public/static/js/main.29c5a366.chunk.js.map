{"version":3,"sources":["components/LandingPage.js","components/NewUserForm.js","components/AllUsers.js","components/EditUserForm.js","components/SingleUser.js","components/MovieSearch.js","components/MovieResult.js","components/MovieResults.js","components/AddMovie.js","components/UserMovies.js","components/SingleMovie.js","components/TVShowSearch.js","components/TVShowResult.js","components/TVShowResults.js","components/AddTVShow.js","components/UserTvShows.js","components/SingleTVShow.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","react_default","a","createElement","Link","to","Component","StyledForm","styled","Form","_templateObject","StyledModal","Modal","_templateObject2","NewUserForm","state","newUser","name","age","location","modalOpen","handleOpen","_this","setState","handleChange","event","Object","objectSpread","target","value","handleSubmit","preventDefault","props","addNewUser","addNewUserModal","trigger","Button","onClick","open","Content","form","onSubmit","Field","inline","Input","fluid","onChange","type","placeholder","className","this","Page","div","AllUsers_templateObject","UserListContainer","AllUsers_templateObject2","AllUsers","users","fetchUsers","_callee","response","regenerator_default","wrap","_context","prev","next","axios","get","sent","data","stop","_callee2","_context2","post","userList","map","user","i","concat","id","key","NewUserForm_NewUserForm","EditUserForm_templateObject","EditUserForm_templateObject2","EditUserForm","componentDidMount","getUser","userId","updatedUser","handleUpdate","put","editUserModal","EditUserForm_StyledModal","color","EditUserForm_StyledForm","floated","ProfileSection","SingleUser_templateObject","StyledCard","Card","SingleUser_templateObject2","StyledCardContent","_templateObject3","SingleUser","redirect","fetchData","responseUser","match","params","deleteUser","delete","_this2","Redirect","Description","extra","EditUserForm_EditUserForm","push","history","MovieSearch","searchQuery","inputChangeHandler","searchButtonHandler","process","console","log","transferResult","toggleSearching","newSearchHandler","searching","MovieResult","addNewMovie","movieId","title","releaseDate","overview","posterPath","toggleAddMovie","src","poster_path","alt","release_date","movie_id","MovieResults","movies","searchResults","movie","MovieResult_MovieResult","AddMovie","results","MovieSearch_MovieSearch","MovieResults_MovieResults","UserMovies","addMovie","newMovie","responseMovie","user_id","handleSubmitMovie","_callee3","_context3","movieList","AddMovie_AddMovie","SingleMovie","movieDetails","genres","fetchMovieData","abrupt","fetchMovieDetails","deleteMovie","movieResponse","movieDetailsResponse","genreNames","genre","toString","TVShowSearch","TVShowResult","addNewTVShow","tvId","firstAirDate","toggleAddTVShow","first_air_date","tv_id","TVShowResults","tvShows","tvShow","TVShowResult_TVShowResult","AddTVShow","TVShowSearch_TVShowSearch","TVShowResults_TVShowResults","UserTvShows","addTVShow","newTVShow","responseTVShow","handleSubmitTVShow","tvShowsList","AddTVShow_AddTVShow","SingleTVShow","tvShowDetails","networks","fetchTvShowData","fetchTvShowDetails","deleteTvShow","tvShowId","tvShowResponse","tvShowDetailsResponse","networkNames","network","number_of_seasons","number_of_episodes","status","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","hostname","require","config","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.29c5a366.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\n\nexport default class LandingPage extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Landing Page</h1>\n        <p>App description</p>\n        <Link to='/users'><button>Enter</button></Link>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Form, Button, Modal, Input } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\nconst StyledForm = styled(Form)`\n    &&& {\n        width: 30vw; \n        margin: auto;  \n    }\n`\nconst StyledModal = styled(Modal)`\n    &&& {\n        width: 50vw;\n        margin:auto;\n    }\n`\n\nexport default class NewUserForm extends Component {\n    state = {\n        newUser: {\n            name: '',\n            age: '',\n            location: ''\n        },\n        modalOpen: false\n    }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n\n    handleChange = (event) => {\n        const newUser = { ...this.state.newUser }\n        newUser[event.target.name] = event.target.value\n        this.setState({ newUser })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const newUser = { ...this.state.newUser }\n        this.props.addNewUser(newUser)\n        this.setState({\n            newUser: {\n                name: '',\n                age: '',\n                location: ''\n            }\n        })\n        this.setState({ modalOpen: false })\n    }\n\n    addNewUserModal = () => (\n        <StyledModal trigger={<Button onClick={this.handleOpen}>(+)</Button>}\n            open={this.state.modalOpen} \n        >\n            <Modal.Content form=\"true\">\n                <StyledForm onSubmit={this.handleSubmit}>\n                    <Form.Field inline>\n                        <label>Name:</label>\n                        <Input fluid onChange={this.handleChange} type=\"text\" name=\"name\" value={this.state.newUser.name} placeholder='Name' />\n                    </Form.Field>\n                    <Form.Field inline>\n                    <label>Age:  </label>\n                    <Input fluid onChange={this.handleChange} type=\"text\" name=\"age\" value={this.state.newUser.age} placeholder='Age' />\n                    </Form.Field>\n                    <Form.Field inline>\n                    <label>Location:</label>\n                    <Input fluid onChange={this.handleChange} type=\"text\" name=\"location\" value={this.state.newUser.location} placeholder='City, State' />\n                    </Form.Field>\n                    <Button className='update' type='submit' value='Add Post'>Submit</Button>\n                </StyledForm>\n            </Modal.Content>\n        </StyledModal>\n    )\n\n    render() {\n        return (\n\n            this.addNewUserModal()\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport NewUserForm from './NewUserForm';\n\nconst Page = styled.div`\n display: flex;\n flex-direction: column;\n align-items: center;\n `\n\nconst UserListContainer = styled.div`\nmargin:auto;\n font-size: 20px;\n display:flex;\n flex-direction: column;\n align-content: space-between;\n align-items: center;\n `\n\nexport default class AllUsers extends Component {\n\n    state = {\n        users: []\n    }\n\n    async componentDidMount() {\n        await this.fetchUsers()\n    }\n\n    fetchUsers = async () => {\n        const response = await axios.get('/api/users')\n        this.setState({ users: response.data })\n    }\n\n    addNewUser = async (newUser) => {\n        await axios.post('/api/users', newUser)\n        this.fetchUsers()\n    }\n\n    render() {\n        const userList = this.state.users.map((user, i) => {\n            return (\n\n                <Link to={`/users/${user.id}`} key={i}>{user.name} </Link>\n\n            )\n        })\n\n        return (\n            <div>\n                <Page>\n\n                    <h1>All Users<NewUserForm\n                        addNewUser={this.addNewUser}\n                    />\n                    </h1>\n                </Page>\n\n\n                <UserListContainer>\n                    {userList}\n                </UserListContainer>\n            </div>\n\n\n\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Form, Button, Modal, Input } from 'semantic-ui-react'\nimport styled from 'styled-components'\n// import { Redirect } from 'react-router-dom'\n\n\nconst StyledForm = styled(Form)`\n    &&& {\n        width: 30vw; \n        margin: auto;  \n    }\n`\nconst StyledModal = styled(Modal)`\n    &&& {\n        width: 50vw;\n        margin:auto;\n        padding-bottom: 10px;\n    }\n`\n\n\nexport default class EditUserForm extends Component {\n    state = {\n        user: {},\n        modalOpen: false\n    }\n\n    componentDidMount = () => {\n        this.getUser()\n    }\n\n    getUser = async () => {\n        const userId = this.props.userId\n        const response = await axios(`/api/users/${userId}`)\n        this.setState({\n            user: response.data\n        })\n    }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n\n\n    handleChange = (event) => {\n        const updatedUser = { ...this.state.user }\n        updatedUser[event.target.name] = event.target.value\n        this.setState({ user: updatedUser })\n    }\n\n    handleUpdate = async (event) => {\n        const userId = this.props.userId\n        const updatedUser = this.state.user\n        // event.preventDefault()\n        await axios.put(`/api/users/${userId}`, updatedUser)\n        // this.props.push(`/users/${userId}`)\n        this.setState({ modalOpen: false })\n        // await this.props.fetchData\n\n    }\n    \n\n    editUserModal = () => (\n        <StyledModal trigger={<Button color='blue' fluid onClick={this.handleOpen}>Edit</Button>}\n            open={this.state.modalOpen}\n        >\n            <Modal.Content form=\"true\">\n                <StyledForm onSubmit={this.handleUpdate}>\n                    <Form.Field inline>\n                        <label>Name:</label>\n                        <Input fluid onChange={this.handleChange} type=\"text\" name=\"name\" value={this.state.user.name} />\n                    </Form.Field>\n                    <Form.Field inline>\n                        <label>Age:  </label>\n                        <Input fluid onChange={this.handleChange} type=\"text\" name=\"age\" value={this.state.user.age}  />\n                    </Form.Field>\n                    <Form.Field inline>\n                        <label>Location:</label>\n                        <Input fluid onChange={this.handleChange} type=\"text\" name=\"location\" value={this.state.user.location}  />\n                    </Form.Field>\n                    <Button floated='right' type='submit' value='Update'>Update</Button>\n                </StyledForm>\n            </Modal.Content>\n        </StyledModal>\n    )\n\n\n\n    render() {\n        // const userId = this.props.match.params.id\n        // if (this.state.redirect){\n        //     return <Redirect to=`/users/{userId}` />\n        // }\n        return (\n            this.editUserModal()\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Redirect, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Card, Button } from 'semantic-ui-react'\nimport EditUserForm from './EditUserForm';\n\nconst ProfileSection = styled.div`\n    padding-top: 20px;\n    margin: auto;\n    display:flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nconst StyledCard = styled(Card)`\n    &&&{\n        width: 30vw;\n        height: 300px;\n    }\n`\n\nconst StyledCardContent = styled(Card.Content)`\n&&&{\n    display:flex;\n    flex-direction:column;\n    justify-content: space-around;\n    align-items:left;\n    font-size: 18px;\n}\n`\nexport default class SingleUser extends Component {\n    state = {\n        user: {},\n        redirect: false\n    }\n\n    async componentDidMount() {\n        this.fetchData()\n    }\n\n    fetchData = async () => {\n        const userId = this.props.match.params.id\n        const responseUser = await axios.get(`/api/users/${userId}`)\n        this.setState({\n            user: responseUser.data\n        })\n    }\n\n    deleteUser = async () => {\n        const userId = this.props.match.params.id\n        await axios.delete(`/api/users/${userId}`)\n        this.setState({ redirect: true })\n\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to='/users' />\n        }\n        const user = this.state.user\n        return (\n            <div>\n                <ProfileSection>\n                    <h1>{user.name}'s Profile</h1>\n                    <StyledCard>\n                        <StyledCardContent>\n\n                            <Card.Description><b>Name:</b> {user.name}</Card.Description>\n                            <Card.Description><b>Age:</b> {user.age}</Card.Description>\n                            <Card.Description> <b>Location:</b> {user.location}</Card.Description>\n\n                            <Card.Content extra>\n                                <EditUserForm\n                                    userId={this.props.match.params.id}\n                                    push={this.props.history.push}\n                                    fetchData={this.fetchData()}\n\n                                />\n                            </Card.Content>\n\n                            <Card.Content extra>\n                                <Button fluid color='red' onClick={() => this.deleteUser()}>Delete</Button>\n                            </Card.Content>\n\n                        </StyledCardContent>\n                    </StyledCard>\n                </ProfileSection>\n\n                <Link to={`/users/${user.id}/movies`}><Button>Movies</Button></Link>\n                <Link to={`/users/${user.id}/tv_shows`}><Button>TV Shows</Button></Link>\n                \n            </div>\n\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\nexport default class MovieSearch extends Component {\n    state = {\n        searchQuery: ''\n    }\n\n    inputChangeHandler = (event) => {\n        this.setState({ searchQuery: event.target.value })\n    }\n\n    searchButtonHandler = async () => {\n        const response = await axios.get(`https://api.themoviedb.org/3/search/movie?query=${this.state.searchQuery}&api_key=${process.env.REACT_APP_API_KEY}`)\n        console.log(response.data)\n        this.props.transferResult(response)\n        this.props.toggleSearching()\n      }\n    \n    newSearchHandler = () => {\n        this.props.toggleSearching()\n      }\n\n    render() {\n        return (\n            <div>\n                {this.props.searching ?\n                    <input type='text' value={this.state.searchQuery} onChange={this.inputChangeHandler} /> :\n                    null}\n                {this.props.searching ?\n                    <button onClick={this.searchButtonHandler}>Search</button> :\n                    <button onClick={this.newSearchHandler}>New Search</button>}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Button } from 'semantic-ui-react'\n\n\nexport default class MovieResult extends Component {\n\n  addNewMovie = (movieId, title, releaseDate, overview, posterPath) => {\n    this.props.addNewMovie(movieId, title, releaseDate, overview, posterPath)\n    this.props.toggleAddMovie()\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <div><img src={this.props.poster_path} alt='movie poster'/></div>\n        <div>{this.props.title}</div>\n        <div>{this.props.release_date}</div>\n        <div>{this.props.overview}</div>\n        <div>{this.props.movie_id}</div>\n        <div>\n          <Button onClick={() => this.addNewMovie(this.props.title, this.props.movie_id, this.props.release_date, this.props.overview, this.props.poster_path)}>Add to List</Button>\n        </div>\n\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport MovieResult from './MovieResult';\n\nexport default class MovieResults extends Component {\n    render() {\n        const movies = this.props.searchResults.map((movie, i) => {\n        const poster_path= `https://image.tmdb.org/t/p/w200/${movie.poster_path}`\n            return (\n                <MovieResult\n                    key={i}\n                    title={movie.title}\n                    movie_id={movie.id}\n                    release_date={movie.release_date}\n                    poster_path={poster_path}\n                    overview={movie.overview}\n                    addNewMovie={this.props.addNewMovie}\n                    toggleAddMovie={this.props.toggleAddMovie}\n                />\n\n            )\n        })\n        return (\n            <div>\n                {movies}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport MovieSearch from './MovieSearch';\nimport MovieResults from './MovieResults';\n\nexport default class AddMovie extends Component {\n    state = {\n        searching: true,\n        searchResults: []\n    }\n\n    transferResult = (response) => {\n        this.setState({ searchResults: response.data.results})\n    }\n\n    toggleSearching = () => {\n        this.setState({ searching: !this.state.searching })\n    }\n\n    render() {\n        return (\n            <div>\n                    <h1>Add Movie</h1>\n                    <MovieSearch\n                    transferResult={this.transferResult}\n                    searching={this.state.searching}\n                    toggleSearching={this.toggleSearching} />\n\n                    {this.state.searching ? null : \n                    <MovieResults \n                    searchResults={this.state.searchResults} \n                    addNewMovie={this.props.addNewMovie}\n                    toggleAddMovie={this.props.toggleAddMovie}\n                    />}\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { Card, Button } from 'semantic-ui-react'\nimport AddMovie from './AddMovie';\n\n\nexport default class UserMovies extends Component {\n    state = {\n        user: {},\n        movies: [],\n        addMovie: false,\n        newMovie: {\n            title: '',\n            movie_id: '',\n            release_date: '',\n            overview: '',\n            poster_path: ''\n        }\n    }\n\n    fetchData = async () => {\n        const userId = this.props.match.params.user_id\n        const responseUser = await axios.get(`/api/users/${userId}`)\n        const responseMovie = await axios.get(`/api/users/${userId}/movies`)\n        this.setState({\n            user: responseUser.data,\n            movies: responseMovie.data\n        })\n    }\n\n    async componentDidMount() {\n        await this.fetchData()\n    }\n\n    toggleAddMovie = () => {\n        this.setState({ addMovie: !this.state.addMovie })\n    }\n\n    addNewMovie = async (title, movie_id, release_date, overview, poster_path) => {\n        const newMovie = { ...this.state.newMovie }\n        newMovie.title = title\n        newMovie.movie_id = movie_id\n        newMovie.release_date = release_date\n        newMovie.overview = overview\n        newMovie.poster_path = poster_path\n        await this.setState({ newMovie })\n        this.handleSubmitMovie()\n    }\n\n    handleSubmitMovie = async ()=> {\n        const userId = this.props.match.params.user_id\n        await axios.post(`/api/users/${userId}/movies`, this.state.newMovie)\n        await this.fetchData()\n        this.setState({newMovie:{\n            title: '',\n            movie_id: '',\n            release_date: '',\n            overview: '',\n            poster_path: ''\n        }})\n\n    }\n\n    render() {\n        const user = this.state.user\n        const movieList = this.state.movies.map((movie, i) => {\n            return (\n                <Link key={i} to={`/users/${user.id}/movies/${movie.id}`}>\n                    <Card >\n                        <Card.Content> Title: {movie.title} </Card.Content>\n                        {/* <Card.Content> Release Date: {movie.release_date} </Card.Content> */}\n                        <Card.Content><img src={movie.poster_path} alt='movie poster' /> </Card.Content>\n                        {/* <Card.Content>Overview: {movie.overview} </Card.Content> */}\n                    </Card>\n                </Link>\n            )\n        })\n        return (\n            <div>\n                <h1>{user.name}'s Movies<Button onClick={this.toggleAddMovie}>(+)</Button></h1>\n                {this.state.addMovie ?\n                    <AddMovie\n                        toggleAddMovie={this.toggleAddMovie}\n                        addNewMovie={this.addNewMovie}\n                    /> : ''}\n                <div>\n                    {movieList}\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\nexport default class SingleMovie extends Component {\n    state = {\n        movie: {},\n        movieDetails: {\n            genres: []\n        }\n    }\n    async componentDidMount() {\n        const movieResponse = await this.fetchMovieData()\n        const movieDetailsResponse = await this.fetchMovieDetails(movieResponse.data.movie_id)\n\n        this.setState({\n            movie: movieResponse.data,\n            movieDetails: movieDetailsResponse.data\n        })\n    }\n\n    fetchMovieData = async () => {\n        const userId = this.props.match.params.user_id\n        const movieId = this.props.match.params.id\n        return await axios.get(`/api/users/${userId}/movies/${movieId}`)\n    }\n\n    fetchMovieDetails = async (movie_id) => {\n        return await axios.get(`https://api.themoviedb.org/3/movie/${movie_id}?api_key=${process.env.REACT_APP_API_KEY}`)\n    }\n\n    deleteMovie = async(movieId) => {\n        const userId = this.props.match.params.user_id\n        await axios.delete(`/api/users/${userId}/movies/${movieId}`)\n        this.props.history.push(`/users/${userId}/movies`)\n        \n    }\n\n    render() {\n        const movie = this.state.movie\n        const movieDetails = this.state.movieDetails\n        const genres = movieDetails.genres\n        console.log(genres)\n\n        let genreNames = genres.map(genre => genre.name)\n\n        return (\n            <div>\n                <div><img src={movie.poster_path} alt= 'movie poster' /></div>\n                <p><b>Title:</b> {movie.title}</p>\n                <p><b>Genre(s):</b>{genreNames.toString()}</p>\n                <p><b>Release Date:</b> {movie.release_date} </p>\n                <p><b>Overview:</b> {movie.overview}</p>\n                <button onClick={()=> this.deleteMovie(movie.id)}>Delete Movie</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\nexport default class TVShowSearch extends Component {\n    state = {\n        searchQuery: ''\n    }\n\n    inputChangeHandler = (event) => {\n        this.setState({ searchQuery: event.target.value })\n    }\n\n    searchButtonHandler = async () => {\n        const response = await axios.get(`https://api.themoviedb.org/3/search/tv?query=${this.state.searchQuery}&api_key=${process.env.REACT_APP_API_KEY}`)\n        console.log(response.data)\n        this.props.transferResult(response)\n        this.props.toggleSearching()\n    }\n\n    newSearchHandler = () => {\n        this.props.toggleSearching()\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.searching ?\n                    <input type='text' value={this.state.searchQuery} onChange={this.inputChangeHandler} /> :\n                    null}\n                {this.props.searching ?\n                    <button onClick={this.searchButtonHandler}>Search</button> :\n                    <button onClick={this.newSearchHandler}>New Search</button>}\n\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Button } from 'semantic-ui-react'\n\n\nexport default class TVShowResult extends Component {\n\n    addNewTVShow = (tvId, name, firstAirDate, overview, posterPath) => {\n        this.props.addNewTVShow(tvId, name, firstAirDate, overview, posterPath)\n        this.props.toggleAddTVShow()\n    }\n\n    render() {\n        return (\n            <div>\n                <div><img src={this.props.poster_path} alt='show poster' /></div>\n                <div>{this.props.name}</div>\n                <div>{this.props.first_air_date}</div>\n                <div>{this.props.overview}</div>\n                <div>{this.props.tv_id}</div>\n\n                <div>\n                    <Button onClick={() => this.addNewTVShow(this.props.name, this.props.tv_id, this.props.first_air_date, this.props.overview, this.props.poster_path)}>Add to List</Button>\n                </div>\n\n\n\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport TVShowResult from './TVShowResult';\n\nexport default class TVShowResults extends Component {\n  render() {\n    const tvShows = this.props.searchResults.map((tvShow, i) => {\n        const poster_path= `https://image.tmdb.org/t/p/w200/${tvShow.poster_path}`\n            return (\n                <TVShowResult\n                    key={i}\n                    name={tvShow.name}\n                    tv_id={tvShow.id}\n                    first_air_date={tvShow.first_air_date}\n                    poster_path={poster_path}\n                    overview={tvShow.overview}\n                    addNewTVShow={this.props.addNewTVShow}\n                    toggleAddTVShow={this.props.toggleAddTVShow}\n                />\n\n            )\n        })\n\n    return (\n      <div>\n        {tvShows}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport TVShowSearch from './TVShowSearch';\nimport TVShowResults from './TVShowResults';\n\nexport default class AddTVShow extends Component {\n    state = {\n        searching: true,\n        searchResults: []\n    }\n\n    transferResult = (response) => {\n        this.setState({ searchResults: response.data.results})\n    }\n\n    toggleSearching = () => {\n        this.setState({ searching: !this.state.searching })\n    }\n\n\n  render() {\n    return (\n      <div>\n          <h1>Add TV Show</h1>\n                    <TVShowSearch\n                    transferResult={this.transferResult}\n                    searching={this.state.searching}\n                    toggleSearching={this.toggleSearching} />\n\n                    {this.state.searching ? null : \n                    <TVShowResults\n                    searchResults={this.state.searchResults} \n                    addNewTVShow={this.props.addNewTVShow}\n                    toggleAddTVShow={this.props.toggleAddTVShow}\n                    />}\n\n        \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { Card, Button } from 'semantic-ui-react'\nimport AddTVShow from './AddTVShow';\n\n\nexport default class UserTvShows extends Component {\n    state = {\n        user: {},\n        tvShows: [],\n        addTVShow: false,\n        newTVShow: {\n            name: '',\n            tv_id: '',\n            first_air_date: '',\n            overview: '',\n            poster_path: ''\n        }\n    }\n\n    fetchData = async () => {\n        const userId = this.props.match.params.user_id\n        const responseUser = await axios.get(`/api/users/${userId}`)\n        const responseTVShow = await axios.get(`/api/users/${userId}/tv_shows`)\n        this.setState({\n            user: responseUser.data,\n            tvShows: responseTVShow.data\n        })\n    }\n\n    async componentDidMount() {\n        await this.fetchData()\n    }\n\n    toggleAddTVShow = () => {\n        this.setState({ addTVShow: !this.state.addTVShow })\n    }\n\n    addNewTVShow = async (name, tv_id, first_air_date, overview, poster_path) => {\n        const newTVShow = { ...this.state.newTVShow }\n        newTVShow.name = name\n        newTVShow.tv_id = tv_id\n        newTVShow.first_air_date = first_air_date\n        newTVShow.overview = overview\n        newTVShow.poster_path = poster_path\n        await this.setState({ newTVShow })\n        this.handleSubmitTVShow()\n    }\n\n    handleSubmitTVShow = async ()=> {\n        const userId = this.props.match.params.user_id\n        await axios.post(`/api/users/${userId}/tv_shows`, this.state.newTVShow)\n        await this.fetchData()\n        this.setState({newTVShow:{\n            name: '',\n            tv_id: '',\n            first_air_date: '',\n            overview: '',\n            poster_path: ''\n        }})\n\n    }\n\n    render() {\n        const user = this.state.user\n        const tvShowsList = this.state.tvShows.map((tvShow, i) => {\n            return (\n                <Link key={i} to={`/users/${user.id}/tv_shows/${tvShow.id}`}>\n                    <Card >\n                        <Card.Content> Name: {tvShow.name} </Card.Content>\n                        {/* <Card.Content> First Air Date: {tvShow.first_air_date} </Card.Content> */}\n                        <Card.Content><img src={tvShow.poster_path} alt='show poster' /> </Card.Content>\n                        {/* <Card.Content>Overview: {tvShow.overview} </Card.Content> */}\n                    </Card>\n                </Link>\n            )\n        })\n        return (\n            <div>\n                <h1>{user.name}'s TV Shows<Button onClick={this.toggleAddTVShow}>(+)</Button></h1>\n                {this.state.addTVShow ?\n                    <AddTVShow\n                        toggleAddTVShow={this.toggleAddTVShow}\n                        addNewTVShow={this.addNewTVShow}\n                    /> : ''}\n                <div>\n                    {tvShowsList}\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\nexport default class SingleTVShow extends Component {\n    state = {\n        tvShow: {},\n        tvShowDetails: {\n            genres: [],\n            networks: []\n        }\n    }\n\n    async componentDidMount() {\n        const tvShowResponse = await this.fetchTvShowData()\n        const tvShowDetailsResponse = await this.fetchTvShowDetails(tvShowResponse.data.tv_id)\n        this.setState({\n            tvShow: tvShowResponse.data,\n            tvShowDetails: tvShowDetailsResponse.data\n        })\n    }\n\n    fetchTvShowData = async () => {\n        const userId = this.props.match.params.user_id\n        const tvId = this.props.match.params.id\n        return await axios.get(`/api/users/${userId}/tv_shows/${tvId}`)\n    }\n\n    fetchTvShowDetails = async (tv_id) => {\n        return await axios.get(`https://api.themoviedb.org/3/tv/${tv_id}?api_key=${process.env.REACT_APP_API_KEY}`)\n    }\n\n    deleteTvShow = async(tvShowId) => {\n        const userId = this.props.match.params.user_id\n        await axios.delete(`/api/users/${userId}/tv_shows/${tvShowId}`)\n        this.props.history.push(`/users/${userId}/tv_shows`)\n        \n    }\n\n\n    render() {\n        const tvShow = this.state.tvShow\n        const tvShowDetails = this.state.tvShowDetails\n        const genres = tvShowDetails.genres\n        const networks = tvShowDetails.networks\n\n        const genreNames = genres.map(genre => genre.name)\n        const networkNames = networks.map(network => network.name)\n\n\n        return (\n            <div>\n                <div><img src={tvShow.poster_path} alt='show poster' /></div>\n                <p><b>Name:</b> {tvShow.name}</p>\n                <p><b>Genre(s):</b> {genreNames.toString()}</p>\n                <p><b>Overview:</b> {tvShow.overview}</p>\n                <p><b>Network(s):</b> {networkNames.toString()}</p>\n                <p><b>First Air Date:</b> {tvShow.first_air_date} </p>\n                <p><b>Total Seasons:</b> {tvShowDetails.number_of_seasons}</p>\n                <p><b>Total Episodes:</b> {tvShowDetails.number_of_episodes}</p>\n                <p><b>Status:</b> {tvShowDetails.status}</p>\n\n\n                <button onClick={() => this.deleteTvShow(tvShow.id)}>Delete TV Show</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport LandingPage from './components/LandingPage';\nimport AllUsers from './components/AllUsers';\nimport SingleUser from './components/SingleUser';\nimport UserMovies from './components/UserMovies';\nimport SingleMovie from './components/SingleMovie';\nimport UserTvShows from './components/UserTvShows';\nimport SingleTVShow from './components/SingleTVShow';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path='/' component={LandingPage} />\n          <Route exact path='/users' component={AllUsers} />\n          <Route exact path='/users/:id' component={SingleUser} />\n          <Route exact path='/users/:user_id/movies' component={UserMovies} />\n          <Route exact path='/users/:user_id/tv_shows' component={UserTvShows} />\n          <Route exact path='/users/:user_id/movies/:id' component={SingleMovie} />\n          <Route exact path='/users/:user_id/tv_shows/:id' component={SingleTVShow} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config()\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}