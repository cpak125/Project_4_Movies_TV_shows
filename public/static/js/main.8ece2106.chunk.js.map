{"version":3,"sources":["components/LandingPage.js","components/NewUserForm.js","components/AllUsers.js","components/EditUserForm.js","components/SingleUser.js","components/MovieResult.js","components/MovieResults.js","components/AddMovie.js","components/UserMovies.js","components/SingleMovie.js","components/TVShowResult.js","components/TVShowResults.js","components/AddTVShow.js","components/UserTvShows.js","components/SingleTVShow.js","App.js","serviceWorker.js","index.js"],"names":["Page","styled","div","StyledButton","Button","StyledFooter","StyledLogo","Image","LandingPage","className","to","floated","src","alt","Component","StyledForm","Form","StyledModal","Modal","NewUserForm","state","newUser","name","age","location","modalOpen","handleOpen","setState","handleClose","handleChange","event","target","value","handleSubmit","preventDefault","props","addNewUser","addNewUserModal","trigger","Icon","link","color","onClick","open","Header","Content","form","onSubmit","Field","inline","Input","fluid","onChange","type","placeholder","this","Body","StyledMenu","Menu","AllUsers","users","fetchUsers","a","axios","get","response","data","post","userList","map","user","i","style","key","id","size","icon","inverted","Item","as","Link","EditUserForm","componentDidMount","getUser","userId","updatedUser","handleUpdate","put","fetchData","editUserModal","ProfileSection","Footer","StyledCard","Card","StyledCardContent","SingleUser","confirmOpen","match","params","responseUser","deleteUser","delete","history","push","handleConfirm","showConfirm","handleCancel","widths","Description","extra","Confirm","content","cancelButton","confirmButton","onCancel","onConfirm","compact","animated","visible","hidden","StyledHeader","MovieResult","addNewMovie","movieId","title","releaseDate","overview","posterPath","raised","Grid","stackable","Row","Column","mobile","stretched","rounded","poster_path","release_date","movie_id","ResultsContainer","MovieResults","movies","searchResults","movie","StyledAddButton","StyledSearchButton","AddMovie","searchQuery","transferResult","results","inputChangeHandler","searchButtonHandler","process","REACT_APP_API_KEY","handleKeyPress","primary","closeIcon","centered","onClose","Sticky","offset","focus","onKeyPress","scrolling","StyledGrid","StyledHeaderCard","UserMovies","newMovie","user_id","responseMovie","handleSubmitMovie","movieList","background","textAlign","height","columns","relaxed","doubling","reverse","StyledContent","SingleMovie","movieDetails","genres","fetchUser","fetchMovieData","fetchMovieDetails","deleteMovie","userResponse","movieResponse","movieDetailsResponse","genreNames","genre","toString","TVShowResult","addNewTVShow","tvId","firstAirDate","first_air_date","tv_id","TVShowResults","tvShows","tvShow","AddTVShow","UserTvShows","addTVShow","newTVShow","responseTVShow","toggleAddTVShow","handleSubmitTVShow","tvShowsList","SingleTVShow","tvShowDetails","networks","fetchTvShowData","fetchTvShowDetails","deleteTvShow","tvShowId","tvShowResponse","tvShowDetailsResponse","networkNames","network","number_of_seasons","number_of_episodes","status","App","exact","path","component","Boolean","window","hostname","require","config","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8ece2106.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Button, Image } from 'semantic-ui-react';\n\nconst Page = styled.div`\nbackground-image:url('https://i.imgur.com/NQk1Lcq.jpg');\nheight:100vh;\nbackground-position: center ;\nbackground-repeat: no-repeat;\nbackground-size:cover;\nbackground-attachment: fixed;\ndisplay:flex;\nflex-direction:column;\njustify-content:space-between;\ntext-align:center;\noverflow:hidden;\nmargin: 0 auto;\nh1{\n  color:#02C39A; \n  font-family: 'Permanent Marker', cursive;\n  font-size:78px;\n  font-weight:bold;\n  letter-spacing: 4px;\n  margin: 0 auto;\n  height:auto;\n  position: relative; \n}\n.main{\n  color:#D8E4FF;\n  background-color: rgba(0,0,0, .6);\n  width:50%;\n  height:auto;\n  font-size:18px;\n  /* position:relative; */\n  margin: 0 auto;\n  font-family: 'Permanent Marker', cursive;\n  letter-spacing: 1px;\n}\n`\nconst StyledButton = styled(Button)`\n&&&{\nbackground-color:#02c39a;\ncolor:#d8e4ff;\n/* margin-top:10px; */\n}\n`\n\nconst StyledFooter = styled.div`\n  background-color: rgba(0,0,0, .6);\n  position:relative;\n  bottom: 0px;\n  margin: 0 auto;\n  width:100vw;\n  height:auto;\n  .footer{\n    font-size:12px;\n    color:#02c39a;\n    position:fixed;\n    bottom:0px;\n  }\n`\n\nconst StyledLogo = styled(Image)`\n&&&{\n  width:8vw;\n  height:auto;\n  float:right;\n}\n`\n\nexport default class LandingPage extends Component {\n  render() {\n    return (\n\n      <Page>\n        <h1>Watcher</h1>\n        <div className='main'>Welcome to Watcher! This is an easy-to-use app that allows you to share your favorite movies and TV shows with people around the world. You can start off by creating your own personal profile and then search for movies and tv shows to add to your favorites list. Or you can view other peoples' favorite movies and tv shows by checking out their profile. Click \"Enter\" below to get started.  </div>\n        <Link to='/users'><StyledButton>Enter</StyledButton></Link>\n        <StyledFooter>\n          <div className='footer'>This product uses the TMDb API but is not endorsed or certified by TMDb.</div>\n          <StyledLogo floated='right' src='https://www.themoviedb.org/assets/1/v4/logos/293x302-powered-by-square-green-3ee4814bb59d8260d51efdd7c124383540fc04ca27d23eaea3a8c87bfa0f388d.png' alt='TMDB logo'>\n          </StyledLogo>\n        </StyledFooter>\n      </Page>\n\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Form, Button, Modal, Input, Icon } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\nconst StyledForm = styled(Form)`\n    &&& {\n        width: 30vw; \n        margin: 0 auto; \n    }\n`\nconst StyledModal = styled(Modal)`\n    &&& {\n        width: 50vw;\n        margin: 0 auto;\n        padding-bottom: 10px;\n    }\n`\n\nexport default class NewUserForm extends Component {\n    state = {\n        newUser: {\n            name: '',\n            age: '',\n            location: ''\n        },\n        modalOpen: false\n    }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n\n    handleClose = () => this.setState({\n        modalOpen: false,\n        newUser: {\n            name: '',\n            age: '',\n            location: ''\n        }\n    })\n\n\n    handleChange = (event) => {\n        const newUser = { ...this.state.newUser }\n        newUser[event.target.name] = event.target.value\n        this.setState({ newUser })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const newUser = { ...this.state.newUser }\n        this.props.addNewUser(newUser)\n        this.setState({\n            newUser: {\n                name: '',\n                age: '',\n                location: ''\n            },\n            modalOpen: false\n        })\n    }\n\n    addNewUserModal = () => (\n        <StyledModal \n            trigger={<Icon link color='green' name='user plus' onClick={this.handleOpen}>\n            </Icon>}\n            open={this.state.modalOpen}\n        >\n            <Modal.Header>Create New User</Modal.Header>\n            <Modal.Content form=\"true\">\n                <StyledForm onSubmit={this.handleSubmit}>\n                    <Form.Field inline>\n                        <label>Name:</label>\n                        <Input fluid onChange={this.handleChange} type=\"text\" name=\"name\" value={this.state.newUser.name} placeholder='Name' />\n                    </Form.Field>\n                    <Form.Field inline>\n                        <label>Age:  </label>\n                        <Input fluid onChange={this.handleChange} type=\"text\" name=\"age\" value={this.state.newUser.age} placeholder='Age' />\n                    </Form.Field>\n                    <Form.Field inline>\n                        <label>Location:</label>\n                        <Input fluid onChange={this.handleChange} type=\"text\" name=\"location\" value={this.state.newUser.location} placeholder='City, State/Country' />\n                    </Form.Field>\n                    <Button color='red' floated='right' onClick={this.handleClose}>Cancel</Button>\n                    <Button  color='green' floated='right' className='update' type='submit' value='Add Post'>Submit</Button>\n                </StyledForm>\n            </Modal.Content>\n        </StyledModal>\n    )\n\n    render() {\n        return (\n\n            this.addNewUserModal()\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport NewUserForm from './NewUserForm';\nimport { Icon, Menu } from 'semantic-ui-react';\n\nconst Body = styled.div`\n    text-align:center;\n    margin-top:20px;\n    display:flex;\n    flex-direction:column;\n    line-height:2;\n    font-family: 'Permanent Marker', cursive;\n    font-size:25px;\n    color:#02c39a;\n h1{\n    color:#d8e4ff;\n    font-size:40px;\n    font-family: 'Permanent Marker', cursive;\n }\n `\nconst StyledMenu = styled(Menu)`\n &&&{\n    font-family: 'Trade Winds', cursive;\n }\n `\n \nconst Page = styled.div`\n    background-image:url('https://i.imgur.com/oMvEDbI.png');\n    height:100vh;\n    background-color:black;\n    margin:0 auto;\n`\n\nexport default class AllUsers extends Component {\n\n    state = {\n        users: []\n    }\n\n    async componentDidMount() {\n        await this.fetchUsers()\n    }\n\n    fetchUsers = async () => {\n        const response = await axios.get('/api/users')\n        this.setState({ users: response.data })\n    }\n\n    addNewUser = async (newUser) => {\n        await axios.post('/api/users', newUser)\n        this.fetchUsers()\n    }\n\n    render() {\n        const userList = this.state.users.map((user, i) => {\n            return (\n                <Link style={{color:'#02c39a'}} key={i} to={`/users/${user.id}`} >{user.name} </Link>\n            )\n        })\n\n        return (\n            <Page>\n                <StyledMenu style={{}} size='tiny' icon='labeled' inverted>\n                    <Menu.Item as={Link} to='/'>\n                        <Icon link name='home' /> Home\n                    </Menu.Item>\n                </StyledMenu>\n\n                <Body>\n                    <h1>Users <NewUserForm\n                        addNewUser={this.addNewUser}\n                    />\n                    </h1>\n                        {userList}\n                </Body>\n\n            </Page>\n\n\n\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Form, Button, Modal, Input } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\n\nconst StyledForm = styled(Form)`\n    &&& {\n        width: 30vw; \n        margin: auto;  \n        font-size: 16px;\n    }\n`\nconst StyledModal = styled(Modal)`\n    &&& {\n        width: 50vw;\n        margin:auto;\n        padding-bottom: 10px;\n    }\n`\n\n\nexport default class EditUserForm extends Component {\n    state = {\n        user: {},\n        modalOpen: false\n    }\n\n    componentDidMount = () => {\n        this.getUser()\n    }\n\n    getUser = async () => {\n        const userId = this.props.userId\n        const response = await axios(`/api/users/${userId}`)\n        this.setState({\n            user: response.data\n        })\n    }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n\n    handleClose = () => {\n        this.setState({ modalOpen: false })\n        this.getUser()\n    }\n\n  \n    handleChange = (event) => {\n        const updatedUser = { ...this.state.user }\n        updatedUser[event.target.name] = event.target.value\n        this.setState({ user: updatedUser })\n    }\n\n    handleUpdate = async (event) => {\n        const userId = this.props.userId\n        const updatedUser = this.state.user\n        event.preventDefault()\n        await axios.put(`/api/users/${userId}`, updatedUser)\n        this.setState({ modalOpen: false })\n        this.props.fetchData()\n\n    }\n\n\n    editUserModal = () => (\n        <StyledModal trigger={<Button color='blue' fluid onClick={this.handleOpen}>Edit Profile</Button>}\n            open={this.state.modalOpen}\n        >\n            <Modal.Content form=\"true\">\n                <StyledForm onSubmit={this.handleUpdate}>\n                    <Form.Field inline>\n                        <label>Name:</label>\n                        <Input fluid onChange={this.handleChange} type=\"text\" name=\"name\" value={this.state.user.name} />\n                    </Form.Field>\n                    <Form.Field inline>\n                        <label>Age:  </label>\n                        <Input fluid onChange={this.handleChange} type=\"text\" name=\"age\" value={this.state.user.age} />\n                    </Form.Field>\n                    <Form.Field inline>\n                        <label>Location:</label>\n                        <Input fluid onChange={this.handleChange} type=\"text\" name=\"location\" value={this.state.user.location} />\n                    </Form.Field>\n                    <Button color='red' floated='right' onClick={this.handleClose}>Cancel</Button>\n                    <Button color='green' floated='right' type='submit' value='Update'>Update</Button>\n                </StyledForm>\n            </Modal.Content>\n        </StyledModal>\n    )\n\n    render() {\n\n        return (\n            this.editUserModal()\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Card, Button, Icon, Menu, Confirm } from 'semantic-ui-react'\nimport EditUserForm from './EditUserForm';\n\nconst ProfileSection = styled.div`\n    margin-top: 20px;\n    margin: 0 auto;\n    display:flex;\n    flex-direction: column;\n    align-items: center;\n    font-family: 'Trade Winds', cursive;\n    h1{\n        font-family: 'Permanent Marker', cursive;\n        color:#d8e4ff;\n        font-size:40px;\n    }\n    Button{\n        font-size: 40px;\n    }\n`\nconst Footer = styled.div`\n    display:flex;\n    flex-direction:row;\n    justify-content:space-evenly;\n    position:relative;\n    margin-top:20px;\n    Button{\n        width:30vw;\n    }\n`\nconst Page = styled.div`\n    background:url('https://i.imgur.com/oMvEDbI.png');\n    height:100vh;\n    background-color:black;\n    margin:0 auto;\n\n`\nconst StyledMenu = styled(Menu)`\n &&&{\n    font-family: 'Trade Winds', cursive;\n }\n `\nconst StyledCard = styled(Card)`\n    &&&{\n        width: 40vw;\n        height: 300px;\n        background-color:#00120b;\n    }\n`\nconst StyledCardContent = styled(Card.Content)`\n&&&{\n    display:flex;\n    flex-direction:column;\n    justify-content: space-around;\n    align-items:left;\n    font-size: 18px;\n    margin-bottom: 5px;\n}\n`\n\nexport default class SingleUser extends Component {\n    state = {\n        user: {},\n        confirmOpen: false\n    }\n\n    async componentDidMount() {\n        await this.fetchData()\n    }\n\n    fetchData = async () => {\n        const userId = this.props.match.params.id\n        const responseUser = await axios.get(`/api/users/${userId}`)\n        this.setState({\n            user: responseUser.data\n        })\n    }\n\n    deleteUser = async () => {\n        const userId = this.props.match.params.id\n        await axios.delete(`/api/users/${userId}`)\n        this.props.history.push(`/users`)\n        this.handleConfirm()\n    }\n\n    showConfirm = () => this.setState({ confirmOpen: true })\n\n    handleConfirm = () => this.setState({ confirmOpen: false })\n\n    handleCancel = () => this.setState({ confirmOpen: false })\n\n    render() {\n        const user = this.state.user\n        return (\n                <Page>\n                    <StyledMenu fluid widths={2} size='tiny' icon='labeled' inverted>\n                        <Menu.Item as={Link} to='/'>\n                            <Icon link name='home' /> Home\n                    </Menu.Item>\n                        <Menu.Item as={Link} to='/users'>\n                            <Icon link name='users' /> All Users\n                    </Menu.Item>\n                    </StyledMenu>\n\n                    <ProfileSection>\n                        <h1>{user.name}'s Profile</h1>\n                        <StyledCard>\n                            <StyledCardContent>\n\n                                <Card.Description style={{ color: '#02c39a' }}><b>Name:</b> {user.name}</Card.Description>\n                                <Card.Description style={{ color: '#02c39a' }}><b>Age:</b> {user.age}</Card.Description>\n                                <Card.Description style={{ color: '#02c39a' }}> <b>Location:</b> {user.location}</Card.Description>\n\n                                <Card.Content extra>\n                                    <EditUserForm\n                                        userId={this.props.match.params.id}\n                                        push={this.props.history.push}\n                                        fetchData={this.fetchData}\n                                    />\n                                </Card.Content>\n\n                                <Card.Content extra>\n                                    <Button\n                                        fluid\n                                        size='medium'\n                                        color='red'\n                                        onClick={this.showConfirm}>Delete Profile\n                                </Button>\n                                    <Confirm\n                                        open={this.state.confirmOpen}\n                                        content={`Are you sure you want to delete ${user.name}'s profile? `}\n                                        cancelButton='No'\n                                        confirmButton=\"Yes\"\n                                        size='tiny'\n                                        onCancel={this.handleCancel}\n                                        onConfirm={() => this.deleteUser()} />\n                                </Card.Content>\n                            </StyledCardContent>\n                        </StyledCard>\n                    </ProfileSection>\n\n                    <Footer>\n                        <Link to={`/users/${user.id}/movies`}>\n                            <Button compact size='big' color='green' animated='fade'>\n                                <Button.Content visible>\n                                    <Icon name='film' size='big' />\n                                </Button.Content>\n                                <Button.Content hidden>\n                                    See Favorite Movies\n                        </Button.Content>\n                            </Button>\n                        </Link>\n\n                        <Link to={`/users/${user.id}/tv_shows`}>\n                            <Button compact size='big' color='green' animated='fade'>\n                                <Button.Content visible>\n                                    <Icon name='tv' size='big' />\n                                </Button.Content>\n                                <Button.Content hidden>\n                                    See Favorite TV Shows\n                            </Button.Content>\n                            </Button>\n                        </Link>\n                    </Footer>\n                </Page>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Button, Card, Image, Grid } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\nconst StyledCard= styled(Card)`\n&&&{\n  margin-bottom:4vw;\n  font-family: 'Ubuntu Mono', monospace;\n  background-color:#00120b;\n  color:#02c39a;\n  font-size:18px;\n}\n`\nconst StyledHeader = styled(Card.Header)`\n&&&{\n  font-size:25px;\n  font-family: 'Cinzel', serif;\n}\n`\n\nexport default class MovieResult extends Component {\n\n  addNewMovie = (movieId, title, releaseDate, overview, posterPath) => {\n    this.props.addNewMovie(movieId, title, releaseDate, overview, posterPath)\n    this.props.handleClose()\n  }\n\n  render() {\n    return (\n      <StyledCard fluid raised>\n        <Card.Content>\n          <Grid stackable>\n            <Grid.Row >\n              <Grid.Column mobile={4} stretched>\n                <Image size='small' rounded src={this.props.poster_path} alt='movie poster' />\n              </Grid.Column>\n              <Grid.Column stretched mobile={12}>\n                <StyledHeader>{this.props.title}</StyledHeader>\n                <Card.Description> <b>RELEASE DATE:</b> {this.props.release_date}</Card.Description>\n                <Card.Description><b>OVERVIEW:</b> {this.props.overview}</Card.Description>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <Button color='green' floated='right' size='small'\n                  onClick={() => this.addNewMovie(\n                    this.props.title, this.props.movie_id, this.props.release_date,\n                    this.props.overview, this.props.poster_path)}\n                    >Add to List\n             </Button>\n        </Card.Content>\n      </StyledCard>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport MovieResult from './MovieResult'\nimport styled from 'styled-components'\n\nconst ResultsContainer=styled.div`\nmargin-top:2vw;\n`\n\nexport default class MovieResults extends Component {\n    render() {\n\n        const movies = this.props.searchResults.map((movie, i) => {\n            const poster_path = `https://image.tmdb.org/t/p/w200/${movie.poster_path}`\n\n            return (\n                <MovieResult\n                    key={i}\n                    title={movie.title}\n                    movie_id={movie.id}\n                    release_date={movie.release_date}\n                    poster_path={poster_path}\n                    overview={movie.overview}\n                    addNewMovie={this.props.addNewMovie}\n                    handleClose={this.props.handleClose}\n                />\n            )\n        })\n\n        return (\n            <ResultsContainer>\n                {movies}\n            </ResultsContainer>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport MovieResults from './MovieResults';\nimport axios from 'axios'\nimport { Modal, Button, Input, Sticky } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\nconst StyledAddButton = styled(Button)`\n&&&{\n    width:30vw;\n}\n`\nconst StyledSearchButton = styled(Button)`\n&&&{\n    margin-top:1vw;\n}\n`\n\nexport default class AddMovie extends Component {\n    state = {\n        searchQuery: '',\n        searchResults: [],\n        modalOpen: false\n    }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n\n    handleClose = () => this.setState({\n        modalOpen: false,\n        searchQuery: '',\n        searchResults: [],\n    })\n\n    transferResult = (response) => {\n        this.setState({ searchResults: response.data.results })\n    }\n\n    inputChangeHandler = (event) => {\n        this.setState({ searchQuery: event.target.value })\n    }\n\n    searchButtonHandler = async () => {\n        const response = await axios.get(`https://api.themoviedb.org/3/search/movie?query=${this.state.searchQuery}&api_key=${process.env.REACT_APP_API_KEY}`)\n        this.transferResult(response)\n    }\n\n    handleKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            this.searchButtonHandler()\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal\n                    trigger={\n                        <StyledAddButton animated='fade' primary size='large' compact onClick={this.handleOpen} >\n                            <Button.Content visible>Add a Movie</Button.Content>\n                            <Button.Content hidden> Click to begin Search</Button.Content>\n                        </StyledAddButton>}\n                    size='large'\n                    closeIcon\n                    centered={false}\n                    open={this.state.modalOpen}\n                    onClose={this.handleClose}>\n                    <Modal.Content >\n                        <Sticky offset={2}>\n                            <Input size='small' fluid focus type='text' icon='search'\n                                placeholder=\"Search for a Movie...\"\n                                value={this.state.searchQuery}\n                                onChange={this.inputChangeHandler}\n                                onKeyPress={this.handleKeyPress} />\n\n                            <StyledSearchButton size='medium' primary floated='right' onClick={this.searchButtonHandler}>Search</StyledSearchButton>\n                        </Sticky>\n                    </Modal.Content>\n\n                    <Modal.Content scrolling >\n                        <MovieResults\n                            searchResults={this.state.searchResults}\n                            addNewMovie={this.props.addNewMovie}\n                            handleClose={this.handleClose} />\n                    </Modal.Content>\n                </Modal>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Card, Image, Menu, Icon, Grid } from 'semantic-ui-react'\nimport styled from 'styled-components'\nimport AddMovie from './AddMovie';\n\nconst StyledGrid = styled(Grid)`\n    &&&{\n        margin:3vw 3vw ;\n    }\n`\nconst Page = styled.div`\n    background:url('https://i.imgur.com/oMvEDbI.png');\n    background-color:black;\n    margin:0 auto;\n    height:100%;\n`\nconst StyledMenu = styled(Menu)`\n &&&{\n    font-family: 'Trade Winds', cursive;\n }\n `\nconst StyledHeader = styled.div`\ntext-align:center;\nmargin-top: 5vw;\ncolor:#d8e4ff;\nh1{\n    font-family:'Permanent Marker', cursive;\n    font-size:40px;\n}\n `\n\nconst StyledHeaderCard = styled(Card.Header)`\n &&&{\n   font-size:20px;\n   font-family: 'Cinzel', serif;\n   color:#02c39a;\n   font-weight:1000;\n   margin:10px 0 10px 0;\n   position:relative;\n }\n`\n\nexport default class UserMovies extends Component {\n    state = {\n        user: {},\n        movies: [],\n        newMovie: {\n            title: '',\n            movie_id: '',\n            release_date: '',\n            overview: '',\n            poster_path: ''\n        }\n    }\n\n    fetchData = async () => {\n        const userId = this.props.match.params.user_id\n        const responseUser = await axios.get(`/api/users/${userId}`)\n        const responseMovie = await axios.get(`/api/users/${userId}/movies`)\n        this.setState({\n            user: responseUser.data,\n            movies: responseMovie.data\n        })\n    }\n\n    async componentDidMount() {\n        await this.fetchData()\n    }\n\n    addNewMovie = async (title, movie_id, release_date, overview, poster_path) => {\n        const newMovie = { ...this.state.newMovie }\n        newMovie.title = title\n        newMovie.movie_id = movie_id\n        newMovie.release_date = release_date\n        newMovie.overview = overview\n        newMovie.poster_path = poster_path\n        await this.setState({ newMovie })\n        this.handleSubmitMovie()\n    }\n\n    handleSubmitMovie = async () => {\n        const userId = this.props.match.params.user_id\n        await axios.post(`/api/users/${userId}/movies`, this.state.newMovie)\n        await this.fetchData()\n        this.setState({\n            newMovie: {\n                title: '',\n                movie_id: '',\n                release_date: '',\n                overview: '',\n                poster_path: '',\n            }\n        })\n    }\n\n    render() {\n\n        const user = this.state.user\n        const movieList = this.state.movies.map((movie, i) => {\n            return (\n                <Grid.Column key={i}>\n                    <Card link style={{ background: '#00120b' }} as={Link} to={`/users/${user.id}/movies/${movie.id}`} >\n                        <StyledHeaderCard textAlign='center'>{movie.title}</StyledHeaderCard>\n                        <Image rounded style={{ height: '20vw' }} src={movie.poster_path} alt='movie poster' />\n                    </Card>\n                </Grid.Column>\n            )\n        })\n        return (\n            \n                <Page>\n                    <StyledMenu fluid widths={4} size='tiny' icon='labeled' inverted>\n                        <Menu.Item as={Link} to='/'>\n                            <Icon link name='home' /> Home\n                    </Menu.Item>\n\n                        <Menu.Item as={Link} to='/users'>\n                            <Icon link name='users' /> All Users\n                    </Menu.Item>\n\n                        <Menu.Item as={Link} to={`/users/${user.id}`}>\n                            <Icon link name='user' /> {user.name}'s Profile\n                    </Menu.Item>\n\n                        <Menu.Item as={Link} to={`/users/${user.id}/tv_shows`}>\n                            <Icon link name='tv' /> {user.name}'s TV Shows\n                    </Menu.Item>\n                    </StyledMenu>\n\n                    <StyledHeader>\n                        <h1>{user.name}'s Movies</h1>\n                        <AddMovie addNewMovie={this.addNewMovie} />\n                    </StyledHeader>\n\n                    <StyledGrid columns={4} relaxed doubling>\n                        {movieList.reverse()}\n                    </StyledGrid>\n                </Page>\n           \n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { Card, Image, Button, Menu, Icon, Confirm } from 'semantic-ui-react';\n\nconst Page = styled.div`\n    background:url('https://i.imgur.com/oMvEDbI.png');\n    background-color:black;\n    margin:0 auto;\n    height:100%;\n`\nconst StyledMenu = styled(Menu)`\n &&&{\n    font-family: 'Trade Winds', cursive;\n }\n `\n\nconst StyledCard = styled(Card)`\n&&&{\n    width:75vw;\n    margin-top:5vw;\n    margin-bottom:5vw;\n    font-family: 'Ubuntu Mono', monospace;\n    background-color:#00120b;\n    font-size:18px;\n}\n`\nconst StyledHeader = styled(Card.Header)`\n&&&{\n  font-size:35px;\n  font-family: 'Cinzel', serif;\n  color:#02c39a;\n  margin-top:20px;\n  line-height:1;\n}\n`\n\nconst StyledContent = styled(Card.Content)`\n&&&{\n    margin-bottom:1vw;\n    padding-top: 3vw;\n    line-height: 2;\n}\n`\n\nexport default class SingleMovie extends Component {\n    state = {\n        user: {},\n        movie: {},\n        movieDetails: {\n            genres: []\n        },\n        confirmOpen: false\n    }\n\n    async componentDidMount() {\n        const userResponse = await this.fetchUser()\n        const movieResponse = await this.fetchMovieData()\n        const movieDetailsResponse = await this.fetchMovieDetails(movieResponse.data.movie_id)\n\n        this.setState({\n            user: userResponse.data,\n            movie: movieResponse.data,\n            movieDetails: movieDetailsResponse.data\n        })\n    }\n\n    fetchUser = async () => {\n        const userId = this.props.match.params.user_id\n        return await axios.get(`/api/users/${userId}`)\n    }\n\n    fetchMovieData = async () => {\n        const userId = this.props.match.params.user_id\n        const movieId = this.props.match.params.id\n        return await axios.get(`/api/users/${userId}/movies/${movieId}`)\n    }\n\n    fetchMovieDetails = async (movie_id) => {\n        return await axios.get(`https://api.themoviedb.org/3/movie/${movie_id}?api_key=${process.env.REACT_APP_API_KEY}`)\n    }\n\n    deleteMovie = async (movieId) => {\n        const userId = this.props.match.params.user_id\n        await axios.delete(`/api/users/${userId}/movies/${movieId}`)\n        this.props.history.push(`/users/${userId}/movies`)\n    }\n\n    showConfirm = () => this.setState({ confirmOpen: true })\n\n    handleConfirm = () => this.setState({ confirmOpen: false })\n\n    handleCancel = () => this.setState({ confirmOpen: false })\n\n    render() {\n        const user = this.state.user\n        const movie = this.state.movie\n        const movieDetails = this.state.movieDetails\n        const genres = movieDetails.genres\n        const genreNames = genres.map(genre => genre.name)\n        const userId = this.props.match.params.user_id\n\n        return (\n            <Page>\n                <StyledMenu fluid widths={5} size='tiny' icon='labeled' inverted>\n                    <Menu.Item as={Link} to='/'>\n                        <Icon link name='home' /> Home\n                    </Menu.Item>\n\n                    <Menu.Item as={Link} to='/users'>\n                        <Icon link name='users' /> All Users\n                    </Menu.Item>\n\n                    <Menu.Item as={Link} to={`/users/${userId}`}>\n                        <Icon link name='user' />{user.name}'s Profile\n                     </Menu.Item>\n\n                    <Menu.Item as={Link} to={`/users/${userId}/movies`}>\n                        <Icon link name='film' />{user.name}'s' Movies\n                     </Menu.Item>\n                    <Menu.Item as={Link} to={`/users/${userId}/tv_shows`}>\n                        <Icon link name='tv' />{user.name}'s TV Shows\n                     </Menu.Item>\n                </StyledMenu>\n\n                <StyledCard centered>\n                    <StyledHeader textAlign='center'>{movie.title}</StyledHeader>\n                  \n                    <Card.Content textAlign='center'>\n                        <Image rounded src={movie.poster_path} alt='movie poster' />\n                    </Card.Content>\n                    <StyledContent >\n                        <Card.Description style={{color:'#02c39a'}}><b>GENRE(S):</b>{genreNames.toString()}</Card.Description>\n                        <Card.Description style={{color:'#02c39a'}}><b>RELEASE DATE:</b> {movie.release_date} </Card.Description>\n                        <Card.Description style={{color:'#02c39a'}}><b>OVERVIEW:</b> {movie.overview}</Card.Description>\n                        <Button floated='right' color='red' onClick={this.showConfirm}>Delete Movie</Button>\n                        <Confirm\n                            open={this.state.confirmOpen}\n                            content={`Are you sure you want to delete '${movie.title}' ? `}\n                            cancelButton='No'\n                            confirmButton=\"Yes\"\n                            size='tiny'\n                            onCancel={this.handleCancel}\n                            onConfirm={() => this.deleteMovie(movie.id)} />\n                    </StyledContent>\n                        \n                </StyledCard>\n            </Page>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Button, Card, Image, Grid } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\nconst StyledCard= styled(Card)`\n&&&{\n  margin-bottom:4vw;\n  font-family: 'Ubuntu Mono', monospace;\n  background-color:#00120b;\n  color:#02c39a;\n  font-size:18px;\n}\n`\nconst StyledHeader = styled(Card.Header)`\n&&&{\n    font-size:25px;\n    font-family: 'Cinzel', serif;\n}\n`\n\nexport default class TVShowResult extends Component {\n\n    addNewTVShow = (tvId, name, firstAirDate, overview, posterPath) => {\n        this.props.addNewTVShow(tvId, name, firstAirDate, overview, posterPath)\n        this.props.handleClose()\n    }\n\n    render() {\n        return (\n            <StyledCard fluid raised>\n                <Card.Content>\n                    <Grid stackable>\n                        <Grid.Row>\n                            <Grid.Column mobile={4} stretched>\n                                <Image rounded size='small' src={this.props.poster_path} alt='show poster' />\n                            </Grid.Column>\n                            <Grid.Column stretched mobile={12}>\n                                <StyledHeader>{this.props.name}</StyledHeader>\n                                <Card.Description><b>FIRST AIR DATE: </b>{this.props.first_air_date}</Card.Description>\n                                <Card.Description><b>OVERVIEW:</b> {this.props.overview}</Card.Description>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                    <Button color='green' floated='right' size='small'\n                        onClick={() => this.addNewTVShow(this.props.name, this.props.tv_id,\n                            this.props.first_air_date, this.props.overview, this.props.poster_path)}\n                    >Add to List\n                    </Button>\n                </Card.Content>\n            </StyledCard>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport TVShowResult from './TVShowResult';\nimport styled from 'styled-components'\n\nconst ResultsContainer=styled.div`\nmargin-top:2vw;\n`\n\nexport default class TVShowResults extends Component {\n  render() {\n\n    const tvShows = this.props.searchResults.map((tvShow, i) => {\n        const poster_path= `https://image.tmdb.org/t/p/w200/${tvShow.poster_path}`\n\n            return (\n                <TVShowResult\n                    key={i}\n                    name={tvShow.name}\n                    tv_id={tvShow.id}\n                    first_air_date={tvShow.first_air_date}\n                    poster_path={poster_path}\n                    overview={tvShow.overview}\n                    addNewTVShow={this.props.addNewTVShow}\n                    handleClose={this.props.handleClose}\n                />\n            )\n        })\n\n    return (\n      <ResultsContainer>\n        {tvShows}\n      </ResultsContainer>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport TVShowResults from './TVShowResults';\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport { Modal, Button, Input, Sticky } from 'semantic-ui-react'\n\nconst StyledAddButton = styled(Button)`\n&&&{\n    width:30vw;\n}\n`\nconst StyledSearchButton = styled(Button)`\n&&&{\n    margin-top:1vw;\n}\n`\n\nexport default class AddTVShow extends Component {\n    state = {\n        searchQuery: '',\n        searchResults: [],\n        modalOpen: false\n    }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n\n    handleClose = () => this.setState({\n        modalOpen: false,\n        searchQuery: '',\n        searchResults: [],\n    })\n\n    transferResult = (response) => {\n        this.setState({ searchResults: response.data.results })\n    }\n\n    inputChangeHandler = (event) => {\n        this.setState({ searchQuery: event.target.value })\n    }\n\n    searchButtonHandler = async () => {\n        const response = await axios.get(`https://api.themoviedb.org/3/search/tv?query=${this.state.searchQuery}&api_key=${process.env.REACT_APP_API_KEY}`)\n        this.transferResult(response)\n    }\n\n    handleKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            this.searchButtonHandler()\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal trigger={\n                    <StyledAddButton animated='fade' primary size='large' compact onClick={this.handleOpen} >\n                        <Button.Content visible>Add a TV Show</Button.Content>\n                        <Button.Content hidden> Click to begin Search</Button.Content>\n                    </StyledAddButton>}\n                    size='large'\n                    closeIcon\n                    centered={false}\n                    open={this.state.modalOpen}\n                    onClose={this.handleClose} >\n\n                    <Modal.Content>\n                        <Sticky offset={2}>\n                            <Input size='small' fluid focus type='text' placeholder=\"Search for a TV Show...\" icon='search'\n                                value={this.state.searchQuery} onChange={this.inputChangeHandler}\n                                onKeyPress={this.handleKeyPress} />\n\n                            <StyledSearchButton size='small' primary floated='right' onClick={this.searchButtonHandler}>Search</StyledSearchButton>\n                        </Sticky>\n                    </Modal.Content>\n\n                    <Modal.Content scrolling>\n                        <TVShowResults\n                            searchResults={this.state.searchResults}\n                            addNewTVShow={this.props.addNewTVShow}\n                            handleClose={this.handleClose} />\n                    </Modal.Content>\n                </Modal>\n            </div >\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { Card, Image, Menu, Icon, Grid } from 'semantic-ui-react'\nimport AddTVShow from './AddTVShow';\nimport styled from 'styled-components'\n\n\nconst StyledGrid = styled(Grid)`\n    &&&{\n        margin:3vw 3vw ;\n    }\n`\n\nconst StyledHeader = styled.div`\ntext-align:center;\nmargin-top: 5vw;\ncolor:#d8e4ff;\nh1{\n    font-family:'Permanent Marker', cursive;\n    font-size:40px;\n}\n `\nconst Page = styled.div`\n    background:url('https://i.imgur.com/oMvEDbI.png');\n    background-color:black;\n    margin:0 auto;\n    height:100%;\n`\nconst StyledMenu = styled(Menu)`\n &&&{\n    font-family: 'Trade Winds', cursive;\n }\n `\n\nconst StyledHeaderCard = styled(Card.Header)`\n &&&{\n   font-size:20px;\n   font-family: 'Cinzel', serif;\n   color:#02c39a;\n   font-weight:1000;\n   margin:10px 0 10px 0;\n    }\n`\n\nexport default class UserTvShows extends Component {\n    state = {\n        user: {},\n        tvShows: [],\n        addTVShow: false,\n        newTVShow: {\n            name: '',\n            tv_id: '',\n            first_air_date: '',\n            overview: '',\n            poster_path: ''\n        }\n    }\n\n    fetchData = async () => {\n        const userId = this.props.match.params.user_id\n        const responseUser = await axios.get(`/api/users/${userId}`)\n        const responseTVShow = await axios.get(`/api/users/${userId}/tv_shows`)\n        this.setState({\n            user: responseUser.data,\n            tvShows: responseTVShow.data\n        })\n    }\n\n    async componentDidMount() {\n        await this.fetchData()\n    }\n\n    toggleAddTVShow = () => {\n        this.setState({ addTVShow: !this.state.addTVShow })\n    }\n\n    addNewTVShow = async (name, tv_id, first_air_date, overview, poster_path) => {\n        const newTVShow = { ...this.state.newTVShow }\n        newTVShow.name = name\n        newTVShow.tv_id = tv_id\n        newTVShow.first_air_date = first_air_date\n        newTVShow.overview = overview\n        newTVShow.poster_path = poster_path\n        await this.setState({ newTVShow })\n        this.handleSubmitTVShow()\n    }\n\n    handleSubmitTVShow = async () => {\n        const userId = this.props.match.params.user_id\n        await axios.post(`/api/users/${userId}/tv_shows`, this.state.newTVShow)\n        await this.fetchData()\n        this.setState({\n            newTVShow: {\n                name: '',\n                tv_id: '',\n                first_air_date: '',\n                overview: '',\n                poster_path: ''\n            }\n        })\n    }\n\n    render() {\n        const user = this.state.user\n        const tvShowsList = this.state.tvShows.map((tvShow, i) => {\n            return (\n                <Grid.Column key={i} >\n                    <Card style={{ background: '#00120b' }} fluid raised link as={Link} to={`/users/${user.id}/tv_shows/${tvShow.id}`} >\n                        <StyledHeaderCard textAlign='center'>{tvShow.name} </StyledHeaderCard>\n                        <Image rounded style={{ height: '20vw' }} src={tvShow.poster_path} alt='show poster' />\n                    </Card>\n                </Grid.Column>\n            )\n        })\n\n        return (\n            <div>\n                <Page>\n                    <StyledMenu fluid widths={4} size='tiny' icon='labeled' inverted>\n                        <Menu.Item as={Link} to='/'>\n                            <Icon link name='home' /> Home\n                    </Menu.Item>\n\n                        <Menu.Item as={Link} to='/users'>\n                            <Icon link name='users' /> All Users\n                    </Menu.Item>\n\n                        <Menu.Item as={Link} to={`/users/${user.id}`}>\n                            <Icon link name='user' /> {user.name}'s Profile\n                    </Menu.Item>\n\n                        <Menu.Item as={Link} to={`/users/${user.id}/movies`}>\n                            <Icon link name='film' /> {user.name}'s Movies\n                    </Menu.Item>\n                    </StyledMenu>\n\n                    <StyledHeader>\n                        <h1>{user.name}'s TV Shows</h1>\n                        <AddTVShow addNewTVShow={this.addNewTVShow} />\n                    </StyledHeader>\n\n                    <StyledGrid columns={4} relaxed doubling>\n                        {tvShowsList.reverse()}\n                    </StyledGrid>\n                </Page>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { Card, Image, Button, Menu, Icon, Confirm } from 'semantic-ui-react';\n\nconst Page = styled.div`\n    background:url('https://i.imgur.com/oMvEDbI.png');\n    background-color:black;\n    margin:0 auto;\n    height:100%;\n`\nconst StyledMenu = styled(Menu)`\n &&&{\n    font-family: 'Trade Winds', cursive;\n }\n `\n\nconst StyledCard = styled(Card)`\n&&&{\n    width:70vw;\n    margin-top:5vw;\n    margin-bottom:5vw;\n    font-family: 'Ubuntu Mono', monospace;\n    background-color:#00120b;\n    font-size:18px;\n    position:relative;\n}\n`\nconst StyledHeader = styled(Card.Header)`\n&&&{\n  font-size:35px;\n  font-family: 'Cinzel', serif;\n  color:#02c39a;\n  margin-top:20px;\n  line-height:1;\n}\n`\n\nconst StyledContent = styled(Card.Content)`\n&&&{\n    margin-bottom:1vw;\n    padding-top: 3vw;\n    line-height: 2;\n}\n`\n\nexport default class SingleTVShow extends Component {\n    state = {\n        user: {},\n        tvShow: {},\n        tvShowDetails: {\n            genres: [],\n            networks: []\n        },\n        confirmOpen: false\n    }\n\n    async componentDidMount() {\n        const userResponse = await this.fetchUser()\n        const tvShowResponse = await this.fetchTvShowData()\n        const tvShowDetailsResponse = await this.fetchTvShowDetails(tvShowResponse.data.tv_id)\n        this.setState({\n            user: userResponse.data,\n            tvShow: tvShowResponse.data,\n            tvShowDetails: tvShowDetailsResponse.data\n        })\n    }\n\n    fetchUser = async () => {\n        const userId = this.props.match.params.user_id\n        return await axios.get(`/api/users/${userId}`)\n    }\n\n    fetchTvShowData = async () => {\n        const userId = this.props.match.params.user_id\n        const tvId = this.props.match.params.id\n        return await axios.get(`/api/users/${userId}/tv_shows/${tvId}`)\n    }\n\n    fetchTvShowDetails = async (tv_id) => {\n        return await axios.get(`https://api.themoviedb.org/3/tv/${tv_id}?api_key=${process.env.REACT_APP_API_KEY}`)\n    }\n\n    deleteTvShow = async (tvShowId) => {\n        const userId = this.props.match.params.user_id\n        await axios.delete(`/api/users/${userId}/tv_shows/${tvShowId}`)\n        this.props.history.push(`/users/${userId}/tv_shows`)\n\n    }\n\n    showConfirm = () => this.setState({ confirmOpen: true })\n\n    handleConfirm = () => this.setState({ confirmOpen: false })\n\n    handleCancel = () => this.setState({ confirmOpen: false })\n\n    render() {\n        const user = this.state.user\n        const tvShow = this.state.tvShow\n        const tvShowDetails = this.state.tvShowDetails\n        const genres = tvShowDetails.genres\n        const networks = tvShowDetails.networks\n        const genreNames = genres.map(genre => genre.name)\n        const networkNames = networks.map(network => network.name)\n        const userId = this.props.match.params.user_id\n\n        return (\n            <Page>\n                <StyledMenu fluid widths={5} size='tiny' icon='labeled' inverted>\n                    <Menu.Item as={Link} to='/'>\n                        <Icon link name='home' /> Home\n                    </Menu.Item>\n\n                    <Menu.Item as={Link} to='/users'>\n                        <Icon link name='users' /> All Users\n                    </Menu.Item>\n\n                    <Menu.Item as={Link} to={`/users/${userId}`}>\n                        <Icon link name='user' /> {user.name}'s Profile\n                     </Menu.Item>\n\n                    <Menu.Item as={Link} to={`/users/${userId}/tv_shows`}>\n                        <Icon link name='tv' /> {user.name}'s TV Shows\n                     </Menu.Item>\n                    <Menu.Item as={Link} to={`/users/${userId}/movies`}>\n                        <Icon link name='film' />{user.name}'s Movies\n                     </Menu.Item>\n                </StyledMenu>\n\n                <StyledCard centered>\n                    <StyledHeader textAlign='center'> {tvShow.name}</StyledHeader>\n\n                    <Card.Content textAlign='center'>\n                        <Image rounded src={tvShow.poster_path} alt='show poster' />\n                    </Card.Content>\n                    <StyledContent>\n                        <Card.Description style={{ color: '#02c39a' }}><b>GENRE(S):</b> {genreNames.toString()}</Card.Description>\n                        <Card.Description style={{ color: '#02c39a' }}><b>OVERVIEW:</b> {tvShow.overview}</Card.Description>\n                        <Card.Description style={{ color: '#02c39a' }}><b>NETWORK(S):</b> {networkNames.toString()}</Card.Description>\n                        <Card.Description style={{ color: '#02c39a' }}><b>FIRST AIR DATE:</b> {tvShow.first_air_date} </Card.Description>\n                        <Card.Description style={{ color: '#02c39a' }}><b>TOTAL SEASONS:</b> {tvShowDetails.number_of_seasons}</Card.Description>\n                        <Card.Description style={{ color: '#02c39a' }}><b>TOTAL EPISODES:</b> {tvShowDetails.number_of_episodes}</Card.Description>\n                        <Card.Description style={{ color: '#02c39a' }}><b>STATUS:</b> {tvShowDetails.status}</Card.Description>\n                        <Button floated='right' color='red' onClick={this.showConfirm}>Delete TV Show</Button>\n                        <Confirm\n                            open={this.state.confirmOpen}\n                            content={`Are you sure you want to delete '${tvShow.name}' ? `}\n                            cancelButton='No'\n                            confirmButton=\"Yes\"\n                            size='tiny'\n                            onCancel={this.handleCancel}\n                            onConfirm={() => this.deleteTvShow(tvShow.id)} />\n                    </StyledContent>\n\n                </StyledCard>\n            </Page>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport LandingPage from './components/LandingPage';\nimport AllUsers from './components/AllUsers';\nimport SingleUser from './components/SingleUser';\nimport UserMovies from './components/UserMovies';\nimport SingleMovie from './components/SingleMovie';\nimport UserTvShows from './components/UserTvShows';\nimport SingleTVShow from './components/SingleTVShow';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path='/' component={LandingPage} />\n          <Route exact path='/users' component={AllUsers} />\n          <Route exact path='/users/:id' component={SingleUser} />\n          <Route exact path='/users/:user_id/movies' component={UserMovies} />\n          <Route exact path='/users/:user_id/tv_shows' component={UserTvShows} />\n          <Route exact path='/users/:user_id/movies/:id' component={SingleMovie} />\n          <Route exact path='/users/:user_id/tv_shows/:id' component={SingleTVShow} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config()\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}