{"version":3,"sources":["components/LandingPage.js","components/NewUserForm.js","components/AllUsers.js","components/EditUserForm.js","components/SingleUser.js","components/MovieResult.js","components/MovieResults.js","components/AddMovie.js","components/UserMovies.js","components/SingleMovie.js","components/TVShowResult.js","components/TVShowResults.js","components/AddTVShow.js","components/UserTvShows.js","components/SingleTVShow.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","react_default","a","createElement","Link","to","Component","StyledForm","styled","Form","_templateObject","StyledModal","Modal","_templateObject2","NewUserForm","state","newUser","name","age","location","modalOpen","handleOpen","_this","setState","handleClose","handleChange","event","Object","objectSpread","target","value","handleSubmit","preventDefault","props","addNewUser","addNewUserModal","trigger","Icon","link","color","onClick","open","Header","Content","form","onSubmit","Field","inline","Input","fluid","onChange","type","placeholder","Button","floated","className","this","Body","div","AllUsers_templateObject","StyledUser","AllUsers_templateObject2","AllUsers","users","fetchUsers","_callee","response","regenerator_default","wrap","_context","prev","next","axios","get","sent","data","stop","_callee2","_context2","post","userList","map","user","i","key","concat","id","Menu","size","icon","inverted","Item","as","NewUserForm_NewUserForm","EditUserForm_templateObject","EditUserForm_templateObject2","EditUserForm","componentDidMount","getUser","userId","updatedUser","handleUpdate","put","fetchData","editUserModal","EditUserForm_StyledModal","EditUserForm_StyledForm","ProfileSection","SingleUser_templateObject","Page","SingleUser_templateObject2","Footer","_templateObject3","StyledCard","Card","_templateObject4","StyledCardContent","_templateObject5","SingleUser","confirmOpen","responseUser","match","params","deleteUser","delete","history","push","handleConfirm","showConfirm","handleCancel","_this2","widths","Description","extra","EditUserForm_EditUserForm","Confirm","content","cancelButton","confirmButton","onCancel","onConfirm","compact","animated","visible","hidden","MovieResult","addNewMovie","movieId","title","releaseDate","overview","posterPath","src","poster_path","alt","release_date","movie_id","MovieResults","movies","searchResults","movie","MovieResult_MovieResult","resetSearch","StyledAddButton","AddMovie_templateObject","StyledSearchButton","AddMovie_templateObject2","AddMovie","searchQuery","searching","transferResult","results","toggleSearching","inputChangeHandler","searchButtonHandler","process","REACT_APP_API_KEY","newSearchHandler","handleKeyPress","primary","closeIcon","centered","onClose","scrolling","Sticky","offset","focus","onKeyPress","MovieResults_MovieResults","StyledContainer","Group","UserMovies_templateObject","StyledHeader","UserMovies_templateObject2","UserMovies","newMovie","responseMovie","user_id","handleSubmitMovie","_callee3","_context3","movieList","textAlign","Image","AddMovie_AddMovie","doubling","itemsPerRow","reverse","SingleMovie","movieDetails","genres","fetchMovieData","abrupt","fetchMovieDetails","deleteMovie","movieResponse","movieDetailsResponse","genreNames","genre","toString","TVShowResult","addNewTVShow","tvId","firstAirDate","first_air_date","tv_id","TVShowResults","tvShows","tvShow","TVShowResult_TVShowResult","AddTVShow","TVShowResults_TVShowResults","UserTvShows","addTVShow","newTVShow","responseTVShow","toggleAddTVShow","handleSubmitTVShow","tvShowsList","AddTVShow_AddTVShow","SingleTVShow","tvShowDetails","networks","fetchTvShowData","fetchTvShowDetails","deleteTvShow","tvShowId","tvShowResponse","tvShowDetailsResponse","networkNames","network","number_of_seasons","number_of_episodes","status","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","hostname","require","config","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6b69ed25.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\n\nexport default class LandingPage extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Landing Page</h1>\n        <p>App description</p>\n        <Link to='/users'><button>Enter</button></Link>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Form, Button, Modal, Input, Icon } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\nconst StyledForm = styled(Form)`\n    &&& {\n        width: 30vw; \n        margin: 0 auto;  \n    }\n`\nconst StyledModal = styled(Modal)`\n    &&& {\n        width: 50vw;\n        margin: 0 auto;\n        padding-bottom: 10px;\n\n    }\n`\n\nexport default class NewUserForm extends Component {\n    state = {\n        newUser: {\n            name: '',\n            age: '',\n            location: ''\n        },\n        modalOpen: false\n    }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n\n    handleClose = () => this.setState({\n        modalOpen: false,\n        newUser: {\n            name: '',\n            age: '',\n            location: ''\n        }\n    })\n\n\n    handleChange = (event) => {\n        const newUser = { ...this.state.newUser }\n        newUser[event.target.name] = event.target.value\n        this.setState({ newUser })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const newUser = { ...this.state.newUser }\n        this.props.addNewUser(newUser)\n        this.setState({\n            newUser: {\n                name: '',\n                age: '',\n                location: ''\n            },\n            modalOpen: false\n        })\n    }\n\n    addNewUserModal = () => (\n        <StyledModal\n            trigger={<Icon link color='green' name='user plus' onClick={this.handleOpen}>\n            </Icon>}\n            open={this.state.modalOpen}\n        >\n            <Modal.Header>Create New User</Modal.Header>\n            <Modal.Content form=\"true\">\n                <StyledForm onSubmit={this.handleSubmit}>\n                    <Form.Field inline>\n                        <label>Name:</label>\n                        <Input fluid onChange={this.handleChange} type=\"text\" name=\"name\" value={this.state.newUser.name} placeholder='Name' />\n                    </Form.Field>\n                    <Form.Field inline>\n                        <label>Age:  </label>\n                        <Input fluid onChange={this.handleChange} type=\"text\" name=\"age\" value={this.state.newUser.age} placeholder='Age' />\n                    </Form.Field>\n                    <Form.Field inline>\n                        <label>Location:</label>\n                        <Input fluid onChange={this.handleChange} type=\"text\" name=\"location\" value={this.state.newUser.location} placeholder='City, State' />\n                    </Form.Field>\n                    <Button color='red' floated='right' onClick={this.handleClose}>Cancel</Button>\n                    <Button  color='green' floated='right' className='update' type='submit' value='Add Post'>Submit</Button>\n                </StyledForm>\n            </Modal.Content>\n        </StyledModal>\n    )\n\n    render() {\n        return (\n\n            this.addNewUserModal()\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport NewUserForm from './NewUserForm';\nimport { Icon, Menu } from 'semantic-ui-react';\n\nconst Body = styled.div`\n text-align:center;\n margin-top:20px;\n `\n\nconst StyledUser = styled.div`\n margin-top:10px;\n margin-bottom:10px;\n font-size:20px;\n `\n\nexport default class AllUsers extends Component {\n\n    state = {\n        users: []\n    }\n\n    async componentDidMount() {\n        await this.fetchUsers()\n    }\n\n    fetchUsers = async () => {\n        const response = await axios.get('/api/users')\n        this.setState({ users: response.data })\n    }\n\n    addNewUser = async (newUser) => {\n        await axios.post('/api/users', newUser)\n        this.fetchUsers()\n    }\n\n    render() {\n        const userList = this.state.users.map((user, i) => {\n            return (\n                <StyledUser key={i}>\n                    <Link to={`/users/${user.id}`} >{user.name} </Link>\n                </StyledUser>\n            )\n        })\n\n        return (\n            <div>\n                <Menu size='tiny' icon='labeled' inverted>\n                    <Menu.Item as={Link} to='/'>\n                        <Icon link name='home' /> Home\n                    </Menu.Item>\n                </Menu>\n\n                <Body>\n                    <h1>Users <NewUserForm\n                        addNewUser={this.addNewUser}\n                    />\n                    </h1>\n\n                    {userList}\n                </Body>\n\n            </div>\n\n\n\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Form, Button, Modal, Input } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\n\nconst StyledForm = styled(Form)`\n    &&& {\n        width: 30vw; \n        margin: auto;  \n        font-size: 16px;\n    }\n`\nconst StyledModal = styled(Modal)`\n    &&& {\n        width: 50vw;\n        margin:auto;\n        padding-bottom: 10px;\n    }\n`\n\n\nexport default class EditUserForm extends Component {\n    state = {\n        user: {},\n        modalOpen: false\n    }\n\n    componentDidMount = () => {\n        this.getUser()\n    }\n\n    getUser = async () => {\n        const userId = this.props.userId\n        const response = await axios(`/api/users/${userId}`)\n        this.setState({\n            user: response.data\n        })\n    }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n\n    handleClose = () => {\n        this.setState({ modalOpen: false })\n        this.getUser()\n    }\n\n  \n    handleChange = (event) => {\n        const updatedUser = { ...this.state.user }\n        updatedUser[event.target.name] = event.target.value\n        this.setState({ user: updatedUser })\n    }\n\n    handleUpdate = async (event) => {\n        const userId = this.props.userId\n        const updatedUser = this.state.user\n        event.preventDefault()\n        await axios.put(`/api/users/${userId}`, updatedUser)\n        this.setState({ modalOpen: false })\n        this.props.fetchData()\n\n    }\n\n\n    editUserModal = () => (\n        <StyledModal trigger={<Button color='blue' fluid onClick={this.handleOpen}>Edit Profile</Button>}\n            open={this.state.modalOpen}\n        >\n            <Modal.Content form=\"true\">\n                <StyledForm onSubmit={this.handleUpdate}>\n                    <Form.Field inline>\n                        <label>Name:</label>\n                        <Input fluid onChange={this.handleChange} type=\"text\" name=\"name\" value={this.state.user.name} />\n                    </Form.Field>\n                    <Form.Field inline>\n                        <label>Age:  </label>\n                        <Input fluid onChange={this.handleChange} type=\"text\" name=\"age\" value={this.state.user.age} />\n                    </Form.Field>\n                    <Form.Field inline>\n                        <label>Location:</label>\n                        <Input fluid onChange={this.handleChange} type=\"text\" name=\"location\" value={this.state.user.location} />\n                    </Form.Field>\n                    <Button color='red' floated='right' onClick={this.handleClose}>Cancel</Button>\n                    <Button color='green' floated='right' type='submit' value='Update'>Update</Button>\n                </StyledForm>\n            </Modal.Content>\n        </StyledModal>\n    )\n\n    render() {\n\n        return (\n            this.editUserModal()\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Card, Button, Icon, Menu, Confirm } from 'semantic-ui-react'\nimport EditUserForm from './EditUserForm';\n\nconst ProfileSection = styled.div`\n    margin-top: 20px;\n    margin: auto;\n    display:flex;\n    flex-direction: column;\n    align-items: center;\n    Button{\n        font-size: 40px;\n    }\n`\nconst Page = styled.div`\nmargin: 0 auto;\n`\n\nconst Footer = styled.div`\n    display:flex;\n    flex-direction:row;\n    justify-content:space-evenly;\n    margin-top:40px;\n    Button{\n        width:30vw;\n    }\n`\n\nconst StyledCard = styled(Card)`\n    &&&{\n        width: 30vw;\n        height: 300px;\n        background-color:lightgray;\n    }\n`\nconst StyledCardContent = styled(Card.Content)`\n&&&{\n    display:flex;\n    flex-direction:column;\n    justify-content: space-around;\n    align-items:left;\n    font-size: 18px;\n    margin-bottom: 5px;\n}\n`\n\nexport default class SingleUser extends Component {\n    state = {\n        user: {},\n        confirmOpen: false\n    }\n\n    async componentDidMount() {\n        await this.fetchData()\n    }\n\n    fetchData = async () => {\n        const userId = this.props.match.params.id\n        const responseUser = await axios.get(`/api/users/${userId}`)\n        this.setState({\n            user: responseUser.data\n        })\n    }\n\n    deleteUser = async () => {\n        const userId = this.props.match.params.id\n        await axios.delete(`/api/users/${userId}`)\n        this.props.history.push(`/users`)\n        this.handleConfirm()\n    }\n\n    showConfirm = () => this.setState({ confirmOpen: true })\n\n    handleConfirm = () => this.setState({ confirmOpen: false })\n\n    handleCancel = () => this.setState({ confirmOpen: false })\n\n\n    render() {\n        const user = this.state.user\n        return (\n            <Page>\n                <Menu fluid widths={2} size='tiny' icon='labeled' inverted>\n                    <Menu.Item as={Link} to='/'>\n                        <Icon link name='home' /> Home\n                    </Menu.Item>\n                    <Menu.Item as={Link} to='/users'>\n                        <Icon link name='users' /> All Users\n                    </Menu.Item>\n                </Menu>\n\n                <ProfileSection>\n                    <h1>{user.name}'s Profile</h1>\n                    <StyledCard>\n                        <StyledCardContent>\n\n                            <Card.Description><b>Name:</b> {user.name}</Card.Description>\n                            <Card.Description><b>Age:</b> {user.age}</Card.Description>\n                            <Card.Description> <b>Location:</b> {user.location}</Card.Description>\n\n                            <Card.Content extra>\n                                <EditUserForm\n                                    userId={this.props.match.params.id}\n                                    push={this.props.history.push}\n                                    fetchData={this.fetchData}\n                                />\n                            </Card.Content>\n\n                            <Card.Content extra>\n                                <Button\n                                    fluid\n                                    size='medium'\n                                    color='red'\n                                    onClick={this.showConfirm}>Delete Profile\n                                </Button>\n                                <Confirm\n                                    open={this.state.confirmOpen}\n                                    content={`Are you sure you want to delete ${user.name}'s profile? `}\n                                    cancelButton='No'\n                                    confirmButton=\"Yes\"\n                                    size='tiny'\n                                    onCancel={this.handleCancel}\n                                    onConfirm={() => this.deleteUser()} />\n                            </Card.Content>\n                        </StyledCardContent>\n                    </StyledCard>\n                </ProfileSection>\n\n                <Footer>\n                    <Link to={`/users/${user.id}/movies`}>\n                        <Button compact size='big' color='green' animated='fade'>\n                            <Button.Content visible>\n                                <Icon name='film' size='big' />\n                            </Button.Content>\n                            <Button.Content hidden>\n                                See Favorite Movies\n                        </Button.Content>\n                        </Button>\n                    </Link>\n\n                    <Link to={`/users/${user.id}/tv_shows`}>\n                        <Button compact size='big' color='green' animated='fade'>\n                            <Button.Content visible>\n                                <Icon name='tv' size='big' />\n                            </Button.Content>\n                            <Button.Content hidden>\n                                See Favorite TV Shows\n                            </Button.Content>\n                        </Button>\n                    </Link>\n                </Footer>\n\n            </Page>\n\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Button } from 'semantic-ui-react'\n\n\nexport default class MovieResult extends Component {\n\n  addNewMovie = (movieId, title, releaseDate, overview, posterPath) => {\n    this.props.addNewMovie(movieId, title, releaseDate, overview, posterPath)\n    this.props.handleClose()\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div><img src={this.props.poster_path} alt='movie poster' /></div>\n        <div>{this.props.title}</div>\n        <div>{this.props.release_date}</div>\n        <div>{this.props.overview}</div>\n        \n        <div>\n          <Button onClick={() => this.addNewMovie(this.props.title, this.props.movie_id, this.props.release_date, this.props.overview, this.props.poster_path)}>Add to List</Button>\n        </div>\n\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport MovieResult from './MovieResult';\n\nexport default class MovieResults extends Component {\n    render() {\n\n        const movies = this.props.searchResults.map((movie, i) => {\n\n            const poster_path = `https://image.tmdb.org/t/p/w200/${movie.poster_path}`\n            \n            return (\n                <MovieResult\n                    key={i}\n                    title={movie.title}\n                    movie_id={movie.id}\n                    release_date={movie.release_date}\n                    poster_path={poster_path}\n                    overview={movie.overview}\n                    addNewMovie={this.props.addNewMovie}\n                    // toggleAddMovie={this.props.toggleAddMovie}\n                    resetSearch={this.props.resetSearch}\n                    handleClose={this.props.handleClose}\n                    // userId={this.props.userId}\n                />\n            )\n        })\n\n        return (\n            <div>\n                {movies}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport MovieResults from './MovieResults';\nimport axios from 'axios'\nimport { Modal, Button, Input, Sticky } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\nconst StyledAddButton = styled(Button)`\n&&&{\n    width:30vw;\n}\n`\nconst StyledSearchButton = styled(Button)`\n&&&{\n    margin-top:2vw;\n}\n`\n\nexport default class AddMovie extends Component {\n    state = {\n        // searching: false,\n        searchQuery: '',\n        searchResults: [],\n        modalOpen: false\n    }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n\n    handleClose = () => this.setState({\n        modalOpen: false,\n        searchQuery: '',\n        searchResults: [],\n        searching: false\n    })\n\n\n    transferResult = (response) => {\n        this.setState({ searchResults: response.data.results })\n    }\n\n    toggleSearching = () => {\n        this.setState({ searching: !this.state.searching })\n    }\n\n    inputChangeHandler = (event) => {\n        this.setState({ searchQuery: event.target.value })\n    }\n\n    searchButtonHandler = async () => {\n        const response = await axios.get(`https://api.themoviedb.org/3/search/movie?query=${this.state.searchQuery}&api_key=${process.env.REACT_APP_API_KEY}`)\n        this.transferResult(response)\n        this.toggleSearching()\n    }\n\n    newSearchHandler = () => {\n        this.resetSearch()\n    }\n\n\n    // resetSearch = () => {\n    //     this.setState({\n    //         searchQuery: '',\n    //         searchResults: [],\n    //         searching: !this.state.searching\n    //     })\n\n    // }\n\n    handleKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            this.searchButtonHandler()\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Modal\n                    trigger={<StyledAddButton animated='fade' primary size='large' compact onClick={this.handleOpen} >\n                        <Button.Content visible>Add a Movie</Button.Content>\n                        <Button.Content hidden> Click to begin Search</Button.Content>\n                    </StyledAddButton>}\n                    size='large'\n                    closeIcon\n                    centered={false}\n                    open={this.state.modalOpen}\n                    onClose={this.handleClose}\n                >\n                    <Modal.Header>Search for a Movie</Modal.Header>\n                    <Modal.Content scrolling >\n                        <Sticky offset={2}>\n                            <Input fluid focus type='text' icon='search' \n                                placeholder=\"Search...\"\n                                value={this.state.searchQuery}\n                                onChange={this.inputChangeHandler}\n                                onKeyPress={this.handleKeyPress} />\n\n                            {/* {this.state.searching ? */}\n                                {/* <StyledSearchButton primary floated='right' onClick={this.newSearchHandler} >New Search</StyledSearchButton> : */}\n                                <StyledSearchButton primary floated='right' onClick={this.searchButtonHandler}>Search</StyledSearchButton>\n\n                            {/* } */}\n                        </Sticky>\n\n                        {this.state.searching ?\n                            <MovieResults\n                                searchResults={this.state.searchResults}\n                                addNewMovie={this.props.addNewMovie}\n                                resetSearch={this.resetSearch}\n                                handleClose={this.handleClose}\n                            /> :\n                            null\n                        }\n                    </Modal.Content>\n                </Modal>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Card, Image, Menu, Icon } from 'semantic-ui-react'\nimport styled from 'styled-components'\nimport AddMovie from './AddMovie';\n\nconst StyledContainer = styled(Card.Group)`\n    &&&{\n        margin:3vw 10vw ;\n    }\n`\n\nconst StyledHeader = styled.div`\ntext-align:center;\nmargin-top: 5vw;\n`\n\nexport default class UserMovies extends Component {\n    state = {\n        user: {},\n        movies: [],\n        newMovie: {\n            title: '',\n            movie_id: '',\n            release_date: '',\n            overview: '',\n            poster_path: ''\n        }\n    }\n\n    fetchData = async () => {\n        const userId = this.props.match.params.user_id\n        const responseUser = await axios.get(`/api/users/${userId}`)\n        const responseMovie = await axios.get(`/api/users/${userId}/movies`)\n        this.setState({\n            user: responseUser.data,\n            movies: responseMovie.data\n        })\n    }\n\n    async componentDidMount() {\n        await this.fetchData()\n    }\n\n    addNewMovie = async (title, movie_id, release_date, overview, poster_path) => {\n        const newMovie = { ...this.state.newMovie }\n        newMovie.title = title\n        newMovie.movie_id = movie_id\n        newMovie.release_date = release_date\n        newMovie.overview = overview\n        newMovie.poster_path = poster_path\n        await this.setState({ newMovie })\n        this.handleSubmitMovie()\n    }\n\n    handleSubmitMovie = async () => {\n        const userId = this.props.match.params.user_id\n        await axios.post(`/api/users/${userId}/movies`, this.state.newMovie)\n        await this.fetchData()\n        this.setState({\n            newMovie: {\n                title: '',\n                movie_id: '',\n                release_date: '',\n                overview: '',\n                poster_path: '',\n            }\n        })\n    }\n\n    render() {\n\n        const user = this.state.user\n        const movieList = this.state.movies.map((movie, i) => {\n            return (\n                <Card link key={i} as={Link} to={`/users/${user.id}/movies/${movie.id}`} >\n                    <Card.Content >\n                        <Card.Header textAlign='center'> {movie.title} </Card.Header>\n                    </Card.Content>\n                    <Image fluid src={movie.poster_path} alt='movie poster' />\n                </Card>\n            )\n        })\n        return (\n            <div>\n                <Menu fluid widths={3} size='tiny' icon='labeled' inverted>\n                    <Menu.Item as={Link} to='/'>\n                        <Icon link name='home' /> Home\n                    </Menu.Item>\n\n                    <Menu.Item as={Link} to='/users'>\n                        <Icon link name='users' /> All Users\n                    </Menu.Item>\n\n                    <Menu.Item as={Link} to={`/users/${user.id}`}>\n                        <Icon link name='user' /> User\n                    </Menu.Item>\n                </Menu>\n\n                <StyledHeader>\n                    <h1>{user.name}'s Movies</h1>\n                    <AddMovie addNewMovie={this.addNewMovie} />\n                </StyledHeader>\n\n                <StyledContainer doubling itemsPerRow={4}>\n                    {movieList.reverse()}\n                </StyledContainer>\n            </div>\n\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\nexport default class SingleMovie extends Component {\n    state = {\n        movie: {},\n        movieDetails: {\n            genres: []\n        }\n    }\n    async componentDidMount() {\n        const movieResponse = await this.fetchMovieData()\n        const movieDetailsResponse = await this.fetchMovieDetails(movieResponse.data.movie_id)\n\n        this.setState({\n            movie: movieResponse.data,\n            movieDetails: movieDetailsResponse.data\n        })\n    }\n\n    fetchMovieData = async () => {\n        const userId = this.props.match.params.user_id\n        const movieId = this.props.match.params.id\n        return await axios.get(`/api/users/${userId}/movies/${movieId}`)\n    }\n\n    fetchMovieDetails = async (movie_id) => {\n        return await axios.get(`https://api.themoviedb.org/3/movie/${movie_id}?api_key=${process.env.REACT_APP_API_KEY}`)\n    }\n\n    deleteMovie = async(movieId) => {\n        const userId = this.props.match.params.user_id\n        await axios.delete(`/api/users/${userId}/movies/${movieId}`)\n        this.props.history.push(`/users/${userId}/movies`)\n        \n    }\n\n    render() {\n        const movie = this.state.movie\n        const movieDetails = this.state.movieDetails\n        const genres = movieDetails.genres\n\n        let genreNames = genres.map(genre => genre.name)\n\n        return (\n            <div>\n                <div><img src={movie.poster_path} alt= 'movie poster' /></div>\n                <p><b>Title:</b> {movie.title}</p>\n                <p><b>Genre(s):</b>{genreNames.toString()}</p>\n                <p><b>Release Date:</b> {movie.release_date} </p>\n                <p><b>Overview:</b> {movie.overview}</p>\n                <button onClick={()=> this.deleteMovie(movie.id)}>Delete Movie</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Button } from 'semantic-ui-react'\n\n\nexport default class TVShowResult extends Component {\n\n    addNewTVShow = (tvId, name, firstAirDate, overview, posterPath) => {\n        this.props.addNewTVShow(tvId, name, firstAirDate, overview, posterPath)\n        this.props.handleClose()\n        this.props.resetSearch()\n    }\n\n    render() {\n        return (\n            <div>\n                <div><img src={this.props.poster_path} alt='show poster' /></div>\n                <div>{this.props.name}</div>\n                <div>{this.props.first_air_date}</div>\n                <div>{this.props.overview}</div>\n\n                <div>\n                    <Button onClick={() => this.addNewTVShow(this.props.name, this.props.tv_id, this.props.first_air_date, this.props.overview, this.props.poster_path)}>Add to List</Button>\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport TVShowResult from './TVShowResult';\n\nexport default class TVShowResults extends Component {\n  render() {\n    const tvShows = this.props.searchResults.map((tvShow, i) => {\n        const poster_path= `https://image.tmdb.org/t/p/w200/${tvShow.poster_path}`\n            return (\n                <TVShowResult\n                    key={i}\n                    name={tvShow.name}\n                    tv_id={tvShow.id}\n                    first_air_date={tvShow.first_air_date}\n                    poster_path={poster_path}\n                    overview={tvShow.overview}\n                    addNewTVShow={this.props.addNewTVShow}\n                    // toggleAddTVShow={this.props.toggleAddTVShow}\n                    resetSearch={this.props.resetSearch}\n                    handleClose={this.props.handleClose}\n                />\n\n            )\n        })\n\n    return (\n      <div>\n        {tvShows}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport TVShowResults from './TVShowResults';\nimport axios from 'axios'\nimport { Modal, Button, Input } from 'semantic-ui-react'\n\n\n\nexport default class AddTVShow extends Component {\n    state = {\n        searching: false,\n        searchQuery: '',\n        searchResults: [],\n        modalOpen: false\n    }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n\n    handleClose = () => this.setState({ modalOpen: false })\n\n    transferResult = (response) => {\n        this.setState({ searchResults: response.data.results })\n    }\n\n    toggleSearching = () => {\n        this.setState({ searching: !this.state.searching })\n    }\n\n    inputChangeHandler = (event) => {\n        this.setState({ searchQuery: event.target.value })\n    }\n\n    searchButtonHandler = async () => {\n        const response = await axios.get(`https://api.themoviedb.org/3/search/tv?query=${this.state.searchQuery}&api_key=${process.env.REACT_APP_API_KEY}`)\n        this.transferResult(response)\n        this.toggleSearching()\n    }\n\n    newSearchHandler = () => {\n        this.resetSearch()\n    }\n\n    resetSearch = () => {\n        this.setState({\n            searchQuery: '',\n            searchResults: [],\n            searching: !this.state.searching\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Modal trigger={<Button onClick={this.handleOpen} >Add a TV Show</Button>}\n                    closeIcon\n                    open={this.state.modalOpen}\n                    onClose={this.handleClose}\n                >\n                    <Modal.Content>\n                        <h1>Add TV Show</h1>\n\n                        <Input focus placeholder=\"Search...\" value={this.state.searchQuery} onChange={this.inputChangeHandler} />\n\n                        {this.state.searching ?\n                            <button onClick={this.newSearchHandler}>New Search</button> :\n                            <button onClick={this.searchButtonHandler}>Search</button>\n                        }\n\n                        {this.state.searching ?\n                            <TVShowResults\n                                searchResults={this.state.searchResults}\n                                addNewTVShow={this.props.addNewTVShow}\n                                // toggleAddTVShow={this.props.toggleAddTVShow}\n                                resetSearch={this.resetSearch}\n                                // userId={this.props.userId}\n                                handleClose={this.handleClose}\n\n                            /> :\n                            null\n                        }\n                    </Modal.Content>\n                </Modal>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { Card } from 'semantic-ui-react'\nimport AddTVShow from './AddTVShow';\n\n\nexport default class UserTvShows extends Component {\n    state = {\n        user: {},\n        tvShows: [],\n        addTVShow: false,\n        newTVShow: {\n            name: '',\n            tv_id: '',\n            first_air_date: '',\n            overview: '',\n            poster_path: ''\n        }\n    }\n\n    fetchData = async () => {\n        const userId = this.props.match.params.user_id\n        const responseUser = await axios.get(`/api/users/${userId}`)\n        const responseTVShow = await axios.get(`/api/users/${userId}/tv_shows`)\n        this.setState({\n            user: responseUser.data,\n            tvShows: responseTVShow.data\n        })\n    }\n\n    async componentDidMount() {\n        await this.fetchData()\n    }\n\n    toggleAddTVShow = () => {\n        this.setState({ addTVShow: !this.state.addTVShow })\n    }\n\n    addNewTVShow = async (name, tv_id, first_air_date, overview, poster_path) => {\n        const newTVShow = { ...this.state.newTVShow }\n        newTVShow.name = name\n        newTVShow.tv_id = tv_id\n        newTVShow.first_air_date = first_air_date\n        newTVShow.overview = overview\n        newTVShow.poster_path = poster_path\n        await this.setState({ newTVShow })\n        this.handleSubmitTVShow()\n    }\n\n    handleSubmitTVShow = async () => {\n        const userId = this.props.match.params.user_id\n        await axios.post(`/api/users/${userId}/tv_shows`, this.state.newTVShow)\n        await this.fetchData()\n        this.setState({\n            newTVShow: {\n                name: '',\n                tv_id: '',\n                first_air_date: '',\n                overview: '',\n                poster_path: ''\n            }\n        })\n\n    }\n\n    render() {\n        const user = this.state.user\n        const tvShowsList = this.state.tvShows.map((tvShow, i) => {\n            return (\n                <Link key={i} to={`/users/${user.id}/tv_shows/${tvShow.id}`}>\n                    <Card >\n                        <Card.Content> Name: {tvShow.name} </Card.Content>\n                        <Card.Content><img src={tvShow.poster_path} alt='show poster' /> </Card.Content>\n                    </Card>\n                </Link>\n            )\n        })\n        return (\n            <div>\n                <h1>{user.name}'s TV Shows</h1>\n\n                <AddTVShow addNewTVShow={this.addNewTVShow} />\n                \n                <div>\n                    {tvShowsList.reverse()}\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\nexport default class SingleTVShow extends Component {\n    state = {\n        tvShow: {},\n        tvShowDetails: {\n            genres: [],\n            networks: []\n        }\n    }\n\n    async componentDidMount() {\n        const tvShowResponse = await this.fetchTvShowData()\n        const tvShowDetailsResponse = await this.fetchTvShowDetails(tvShowResponse.data.tv_id)\n        this.setState({\n            tvShow: tvShowResponse.data,\n            tvShowDetails: tvShowDetailsResponse.data\n        })\n    }\n\n    fetchTvShowData = async () => {\n        const userId = this.props.match.params.user_id\n        const tvId = this.props.match.params.id\n        return await axios.get(`/api/users/${userId}/tv_shows/${tvId}`)\n    }\n\n    fetchTvShowDetails = async (tv_id) => {\n        return await axios.get(`https://api.themoviedb.org/3/tv/${tv_id}?api_key=${process.env.REACT_APP_API_KEY}`)\n    }\n\n    deleteTvShow = async(tvShowId) => {\n        const userId = this.props.match.params.user_id\n        await axios.delete(`/api/users/${userId}/tv_shows/${tvShowId}`)\n        this.props.history.push(`/users/${userId}/tv_shows`)\n        \n    }\n\n\n    render() {\n        const tvShow = this.state.tvShow\n        const tvShowDetails = this.state.tvShowDetails\n        const genres = tvShowDetails.genres\n        const networks = tvShowDetails.networks\n\n        const genreNames = genres.map(genre => genre.name)\n        const networkNames = networks.map(network => network.name)\n\n\n        return (\n            <div>\n                <div><img src={tvShow.poster_path} alt='show poster' /></div>\n                <p><b>Name:</b> {tvShow.name}</p>\n                <p><b>Genre(s):</b> {genreNames.toString()}</p>\n                <p><b>Overview:</b> {tvShow.overview}</p>\n                <p><b>Network(s):</b> {networkNames.toString()}</p>\n                <p><b>First Air Date:</b> {tvShow.first_air_date} </p>\n                <p><b>Total Seasons:</b> {tvShowDetails.number_of_seasons}</p>\n                <p><b>Total Episodes:</b> {tvShowDetails.number_of_episodes}</p>\n                <p><b>Status:</b> {tvShowDetails.status}</p>\n\n\n                <button onClick={() => this.deleteTvShow(tvShow.id)}>Delete TV Show</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport LandingPage from './components/LandingPage';\nimport AllUsers from './components/AllUsers';\nimport SingleUser from './components/SingleUser';\nimport UserMovies from './components/UserMovies';\nimport SingleMovie from './components/SingleMovie';\nimport UserTvShows from './components/UserTvShows';\nimport SingleTVShow from './components/SingleTVShow';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path='/' component={LandingPage} />\n          <Route exact path='/users' component={AllUsers} />\n          <Route exact path='/users/:id' component={SingleUser} />\n          <Route exact path='/users/:user_id/movies' component={UserMovies} />\n          <Route exact path='/users/:user_id/tv_shows' component={UserTvShows} />\n          <Route exact path='/users/:user_id/movies/:id' component={SingleMovie} />\n          <Route exact path='/users/:user_id/tv_shows/:id' component={SingleTVShow} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config()\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}